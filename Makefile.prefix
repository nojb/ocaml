compilerlibs/ocamlcommon__config.ml: utils/config.ml
	(echo "# 1 \"utils/config.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__config.mli: utils/config.mli
	(echo "# 1 \"utils/config.mli\""; cat $<) > $@
compilerlibs/unprefixed/config.ml: utils/config.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Config instead.\"]" > $@
	echo "include Ocamlcommon.Config" >> $@
compilerlibs/ocamlcommon__build_path_prefix_map.ml: utils/build_path_prefix_map.ml
	(echo "# 1 \"utils/build_path_prefix_map.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__build_path_prefix_map.mli: utils/build_path_prefix_map.mli
	(echo "# 1 \"utils/build_path_prefix_map.mli\""; cat $<) > $@
compilerlibs/unprefixed/build_path_prefix_map.ml: utils/build_path_prefix_map.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Build_path_prefix_map instead.\"]" > $@
	echo "include Ocamlcommon.Build_path_prefix_map" >> $@
compilerlibs/ocamlcommon__misc.ml: utils/misc.ml
	(echo "# 1 \"utils/misc.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__misc.mli: utils/misc.mli
	(echo "# 1 \"utils/misc.mli\""; cat $<) > $@
compilerlibs/unprefixed/misc.ml: utils/misc.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Misc instead.\"]" > $@
	echo "include Ocamlcommon.Misc" >> $@
compilerlibs/ocamlcommon__identifiable.ml: utils/identifiable.ml
	(echo "# 1 \"utils/identifiable.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__identifiable.mli: utils/identifiable.mli
	(echo "# 1 \"utils/identifiable.mli\""; cat $<) > $@
compilerlibs/unprefixed/identifiable.ml: utils/identifiable.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Identifiable instead.\"]" > $@
	echo "include Ocamlcommon.Identifiable" >> $@
compilerlibs/ocamlcommon__numbers.ml: utils/numbers.ml
	(echo "# 1 \"utils/numbers.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__numbers.mli: utils/numbers.mli
	(echo "# 1 \"utils/numbers.mli\""; cat $<) > $@
compilerlibs/unprefixed/numbers.ml: utils/numbers.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Numbers instead.\"]" > $@
	echo "include Ocamlcommon.Numbers" >> $@
compilerlibs/ocamlcommon__arg_helper.ml: utils/arg_helper.ml
	(echo "# 1 \"utils/arg_helper.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__arg_helper.mli: utils/arg_helper.mli
	(echo "# 1 \"utils/arg_helper.mli\""; cat $<) > $@
compilerlibs/unprefixed/arg_helper.ml: utils/arg_helper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Arg_helper instead.\"]" > $@
	echo "include Ocamlcommon.Arg_helper" >> $@
compilerlibs/ocamlcommon__clflags.ml: utils/clflags.ml
	(echo "# 1 \"utils/clflags.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__clflags.mli: utils/clflags.mli
	(echo "# 1 \"utils/clflags.mli\""; cat $<) > $@
compilerlibs/unprefixed/clflags.ml: utils/clflags.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Clflags instead.\"]" > $@
	echo "include Ocamlcommon.Clflags" >> $@
compilerlibs/ocamlcommon__profile.ml: utils/profile.ml
	(echo "# 1 \"utils/profile.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__profile.mli: utils/profile.mli
	(echo "# 1 \"utils/profile.mli\""; cat $<) > $@
compilerlibs/unprefixed/profile.ml: utils/profile.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Profile instead.\"]" > $@
	echo "include Ocamlcommon.Profile" >> $@
compilerlibs/ocamlcommon__load_path.ml: utils/load_path.ml
	(echo "# 1 \"utils/load_path.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__load_path.mli: utils/load_path.mli
	(echo "# 1 \"utils/load_path.mli\""; cat $<) > $@
compilerlibs/unprefixed/load_path.ml: utils/load_path.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Load_path instead.\"]" > $@
	echo "include Ocamlcommon.Load_path" >> $@
compilerlibs/ocamlcommon__terminfo.ml: utils/terminfo.ml
	(echo "# 1 \"utils/terminfo.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__terminfo.mli: utils/terminfo.mli
	(echo "# 1 \"utils/terminfo.mli\""; cat $<) > $@
compilerlibs/unprefixed/terminfo.ml: utils/terminfo.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Terminfo instead.\"]" > $@
	echo "include Ocamlcommon.Terminfo" >> $@
compilerlibs/ocamlcommon__ccomp.ml: utils/ccomp.ml
	(echo "# 1 \"utils/ccomp.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ccomp.mli: utils/ccomp.mli
	(echo "# 1 \"utils/ccomp.mli\""; cat $<) > $@
compilerlibs/unprefixed/ccomp.ml: utils/ccomp.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ccomp instead.\"]" > $@
	echo "include Ocamlcommon.Ccomp" >> $@
compilerlibs/ocamlcommon__warnings.ml: utils/warnings.ml
	(echo "# 1 \"utils/warnings.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__warnings.mli: utils/warnings.mli
	(echo "# 1 \"utils/warnings.mli\""; cat $<) > $@
compilerlibs/unprefixed/warnings.ml: utils/warnings.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Warnings instead.\"]" > $@
	echo "include Ocamlcommon.Warnings" >> $@
compilerlibs/ocamlcommon__consistbl.ml: utils/consistbl.ml
	(echo "# 1 \"utils/consistbl.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__consistbl.mli: utils/consistbl.mli
	(echo "# 1 \"utils/consistbl.mli\""; cat $<) > $@
compilerlibs/unprefixed/consistbl.ml: utils/consistbl.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Consistbl instead.\"]" > $@
	echo "include Ocamlcommon.Consistbl" >> $@
compilerlibs/ocamlcommon__strongly_connected_components.ml: utils/strongly_connected_components.ml
	(echo "# 1 \"utils/strongly_connected_components.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__strongly_connected_components.mli: utils/strongly_connected_components.mli
	(echo "# 1 \"utils/strongly_connected_components.mli\""; cat $<) > $@
compilerlibs/unprefixed/strongly_connected_components.ml: utils/strongly_connected_components.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Strongly_connected_components instead.\"]" > $@
	echo "include Ocamlcommon.Strongly_connected_components" >> $@
compilerlibs/ocamlcommon__targetint.ml: utils/targetint.ml
	(echo "# 1 \"utils/targetint.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__targetint.mli: utils/targetint.mli
	(echo "# 1 \"utils/targetint.mli\""; cat $<) > $@
compilerlibs/unprefixed/targetint.ml: utils/targetint.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Targetint instead.\"]" > $@
	echo "include Ocamlcommon.Targetint" >> $@
compilerlibs/ocamlcommon__location.ml: parsing/location.ml
	(echo "# 1 \"parsing/location.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__location.mli: parsing/location.mli
	(echo "# 1 \"parsing/location.mli\""; cat $<) > $@
compilerlibs/unprefixed/location.ml: parsing/location.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Location instead.\"]" > $@
	echo "include Ocamlcommon.Location" >> $@
compilerlibs/ocamlcommon__longident.ml: parsing/longident.ml
	(echo "# 1 \"parsing/longident.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__longident.mli: parsing/longident.mli
	(echo "# 1 \"parsing/longident.mli\""; cat $<) > $@
compilerlibs/unprefixed/longident.ml: parsing/longident.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Longident instead.\"]" > $@
	echo "include Ocamlcommon.Longident" >> $@
compilerlibs/ocamlcommon__asttypes.ml: parsing/asttypes.ml
	(echo "# 1 \"parsing/asttypes.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__asttypes.mli: parsing/asttypes.mli
	(echo "# 1 \"parsing/asttypes.mli\""; cat $<) > $@
compilerlibs/unprefixed/asttypes.ml: parsing/asttypes.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Asttypes instead.\"]" > $@
	echo "include Ocamlcommon.Asttypes" >> $@
compilerlibs/ocamlcommon__parsetree.ml: parsing/parsetree.ml
	(echo "# 1 \"parsing/parsetree.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__parsetree.mli: parsing/parsetree.mli
	(echo "# 1 \"parsing/parsetree.mli\""; cat $<) > $@
compilerlibs/unprefixed/parsetree.ml: parsing/parsetree.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Parsetree instead.\"]" > $@
	echo "include Ocamlcommon.Parsetree" >> $@
compilerlibs/ocamlcommon__docstrings.ml: parsing/docstrings.ml
	(echo "# 1 \"parsing/docstrings.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__docstrings.mli: parsing/docstrings.mli
	(echo "# 1 \"parsing/docstrings.mli\""; cat $<) > $@
compilerlibs/unprefixed/docstrings.ml: parsing/docstrings.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Docstrings instead.\"]" > $@
	echo "include Ocamlcommon.Docstrings" >> $@
compilerlibs/ocamlcommon__syntaxerr.ml: parsing/syntaxerr.ml
	(echo "# 1 \"parsing/syntaxerr.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__syntaxerr.mli: parsing/syntaxerr.mli
	(echo "# 1 \"parsing/syntaxerr.mli\""; cat $<) > $@
compilerlibs/unprefixed/syntaxerr.ml: parsing/syntaxerr.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Syntaxerr instead.\"]" > $@
	echo "include Ocamlcommon.Syntaxerr" >> $@
compilerlibs/ocamlcommon__ast_helper.ml: parsing/ast_helper.ml
	(echo "# 1 \"parsing/ast_helper.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ast_helper.mli: parsing/ast_helper.mli
	(echo "# 1 \"parsing/ast_helper.mli\""; cat $<) > $@
compilerlibs/unprefixed/ast_helper.ml: parsing/ast_helper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ast_helper instead.\"]" > $@
	echo "include Ocamlcommon.Ast_helper" >> $@
compilerlibs/ocamlcommon__pprintast.ml: parsing/pprintast.ml
	(echo "# 1 \"parsing/pprintast.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__pprintast.mli: parsing/pprintast.mli
	(echo "# 1 \"parsing/pprintast.mli\""; cat $<) > $@
compilerlibs/unprefixed/pprintast.ml: parsing/pprintast.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Pprintast instead.\"]" > $@
	echo "include Ocamlcommon.Pprintast" >> $@
compilerlibs/ocamlcommon__camlinternalMenhirLib.ml: parsing/camlinternalMenhirLib.ml
	(echo "# 1 \"parsing/camlinternalMenhirLib.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__camlinternalMenhirLib.mli: parsing/camlinternalMenhirLib.mli
	(echo "# 1 \"parsing/camlinternalMenhirLib.mli\""; cat $<) > $@
compilerlibs/unprefixed/camlinternalMenhirLib.ml: parsing/camlinternalMenhirLib.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.CamlinternalMenhirLib instead.\"]" > $@
	echo "include Ocamlcommon.CamlinternalMenhirLib" >> $@
compilerlibs/ocamlcommon__parser.ml: parsing/parser.ml
	(echo "# 1 \"parsing/parser.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__parser.mli: parsing/parser.mli
	(echo "# 1 \"parsing/parser.mli\""; cat $<) > $@
compilerlibs/unprefixed/parser.ml: parsing/parser.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Parser instead.\"]" > $@
	echo "include Ocamlcommon.Parser" >> $@
compilerlibs/ocamlcommon__lexer.ml: parsing/lexer.ml
	(echo "# 1 \"parsing/lexer.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__lexer.mli: parsing/lexer.mli
	(echo "# 1 \"parsing/lexer.mli\""; cat $<) > $@
compilerlibs/unprefixed/lexer.ml: parsing/lexer.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Lexer instead.\"]" > $@
	echo "include Ocamlcommon.Lexer" >> $@
compilerlibs/ocamlcommon__parse.ml: parsing/parse.ml
	(echo "# 1 \"parsing/parse.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__parse.mli: parsing/parse.mli
	(echo "# 1 \"parsing/parse.mli\""; cat $<) > $@
compilerlibs/unprefixed/parse.ml: parsing/parse.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Parse instead.\"]" > $@
	echo "include Ocamlcommon.Parse" >> $@
compilerlibs/ocamlcommon__printast.ml: parsing/printast.ml
	(echo "# 1 \"parsing/printast.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__printast.mli: parsing/printast.mli
	(echo "# 1 \"parsing/printast.mli\""; cat $<) > $@
compilerlibs/unprefixed/printast.ml: parsing/printast.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Printast instead.\"]" > $@
	echo "include Ocamlcommon.Printast" >> $@
compilerlibs/ocamlcommon__ast_mapper.ml: parsing/ast_mapper.ml
	(echo "# 1 \"parsing/ast_mapper.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ast_mapper.mli: parsing/ast_mapper.mli
	(echo "# 1 \"parsing/ast_mapper.mli\""; cat $<) > $@
compilerlibs/unprefixed/ast_mapper.ml: parsing/ast_mapper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ast_mapper instead.\"]" > $@
	echo "include Ocamlcommon.Ast_mapper" >> $@
compilerlibs/ocamlcommon__ast_iterator.ml: parsing/ast_iterator.ml
	(echo "# 1 \"parsing/ast_iterator.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ast_iterator.mli: parsing/ast_iterator.mli
	(echo "# 1 \"parsing/ast_iterator.mli\""; cat $<) > $@
compilerlibs/unprefixed/ast_iterator.ml: parsing/ast_iterator.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ast_iterator instead.\"]" > $@
	echo "include Ocamlcommon.Ast_iterator" >> $@
compilerlibs/ocamlcommon__attr_helper.ml: parsing/attr_helper.ml
	(echo "# 1 \"parsing/attr_helper.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__attr_helper.mli: parsing/attr_helper.mli
	(echo "# 1 \"parsing/attr_helper.mli\""; cat $<) > $@
compilerlibs/unprefixed/attr_helper.ml: parsing/attr_helper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Attr_helper instead.\"]" > $@
	echo "include Ocamlcommon.Attr_helper" >> $@
compilerlibs/ocamlcommon__builtin_attributes.ml: parsing/builtin_attributes.ml
	(echo "# 1 \"parsing/builtin_attributes.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__builtin_attributes.mli: parsing/builtin_attributes.mli
	(echo "# 1 \"parsing/builtin_attributes.mli\""; cat $<) > $@
compilerlibs/unprefixed/builtin_attributes.ml: parsing/builtin_attributes.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Builtin_attributes instead.\"]" > $@
	echo "include Ocamlcommon.Builtin_attributes" >> $@
compilerlibs/ocamlcommon__ast_invariants.ml: parsing/ast_invariants.ml
	(echo "# 1 \"parsing/ast_invariants.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ast_invariants.mli: parsing/ast_invariants.mli
	(echo "# 1 \"parsing/ast_invariants.mli\""; cat $<) > $@
compilerlibs/unprefixed/ast_invariants.ml: parsing/ast_invariants.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ast_invariants instead.\"]" > $@
	echo "include Ocamlcommon.Ast_invariants" >> $@
compilerlibs/ocamlcommon__depend.ml: parsing/depend.ml
	(echo "# 1 \"parsing/depend.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__depend.mli: parsing/depend.mli
	(echo "# 1 \"parsing/depend.mli\""; cat $<) > $@
compilerlibs/unprefixed/depend.ml: parsing/depend.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Depend instead.\"]" > $@
	echo "include Ocamlcommon.Depend" >> $@
compilerlibs/ocamlcommon__ident.ml: typing/ident.ml
	(echo "# 1 \"typing/ident.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ident.mli: typing/ident.mli
	(echo "# 1 \"typing/ident.mli\""; cat $<) > $@
compilerlibs/unprefixed/ident.ml: typing/ident.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ident instead.\"]" > $@
	echo "include Ocamlcommon.Ident" >> $@
compilerlibs/ocamlcommon__path.ml: typing/path.ml
	(echo "# 1 \"typing/path.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__path.mli: typing/path.mli
	(echo "# 1 \"typing/path.mli\""; cat $<) > $@
compilerlibs/unprefixed/path.ml: typing/path.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Path instead.\"]" > $@
	echo "include Ocamlcommon.Path" >> $@
compilerlibs/ocamlcommon__outcometree.ml: typing/outcometree.ml
	(echo "# 1 \"typing/outcometree.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__outcometree.mli: typing/outcometree.mli
	(echo "# 1 \"typing/outcometree.mli\""; cat $<) > $@
compilerlibs/unprefixed/outcometree.ml: typing/outcometree.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Outcometree instead.\"]" > $@
	echo "include Ocamlcommon.Outcometree" >> $@
compilerlibs/ocamlcommon__primitive.ml: typing/primitive.ml
	(echo "# 1 \"typing/primitive.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__primitive.mli: typing/primitive.mli
	(echo "# 1 \"typing/primitive.mli\""; cat $<) > $@
compilerlibs/unprefixed/primitive.ml: typing/primitive.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Primitive instead.\"]" > $@
	echo "include Ocamlcommon.Primitive" >> $@
compilerlibs/ocamlcommon__types.ml: typing/types.ml
	(echo "# 1 \"typing/types.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__types.mli: typing/types.mli
	(echo "# 1 \"typing/types.mli\""; cat $<) > $@
compilerlibs/unprefixed/types.ml: typing/types.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Types instead.\"]" > $@
	echo "include Ocamlcommon.Types" >> $@
compilerlibs/ocamlcommon__btype.ml: typing/btype.ml
	(echo "# 1 \"typing/btype.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__btype.mli: typing/btype.mli
	(echo "# 1 \"typing/btype.mli\""; cat $<) > $@
compilerlibs/unprefixed/btype.ml: typing/btype.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Btype instead.\"]" > $@
	echo "include Ocamlcommon.Btype" >> $@
compilerlibs/ocamlcommon__oprint.ml: typing/oprint.ml
	(echo "# 1 \"typing/oprint.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__oprint.mli: typing/oprint.mli
	(echo "# 1 \"typing/oprint.mli\""; cat $<) > $@
compilerlibs/unprefixed/oprint.ml: typing/oprint.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Oprint instead.\"]" > $@
	echo "include Ocamlcommon.Oprint" >> $@
compilerlibs/ocamlcommon__subst.ml: typing/subst.ml
	(echo "# 1 \"typing/subst.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__subst.mli: typing/subst.mli
	(echo "# 1 \"typing/subst.mli\""; cat $<) > $@
compilerlibs/unprefixed/subst.ml: typing/subst.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Subst instead.\"]" > $@
	echo "include Ocamlcommon.Subst" >> $@
compilerlibs/ocamlcommon__predef.ml: typing/predef.ml
	(echo "# 1 \"typing/predef.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__predef.mli: typing/predef.mli
	(echo "# 1 \"typing/predef.mli\""; cat $<) > $@
compilerlibs/unprefixed/predef.ml: typing/predef.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Predef instead.\"]" > $@
	echo "include Ocamlcommon.Predef" >> $@
compilerlibs/ocamlcommon__datarepr.ml: typing/datarepr.ml
	(echo "# 1 \"typing/datarepr.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__datarepr.mli: typing/datarepr.mli
	(echo "# 1 \"typing/datarepr.mli\""; cat $<) > $@
compilerlibs/unprefixed/datarepr.ml: typing/datarepr.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Datarepr instead.\"]" > $@
	echo "include Ocamlcommon.Datarepr" >> $@
compilerlibs/ocamlcommon__cmi_format.ml: typing/cmi_format.ml
	(echo "# 1 \"typing/cmi_format.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__cmi_format.mli: typing/cmi_format.mli
	(echo "# 1 \"typing/cmi_format.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmi_format.ml: typing/cmi_format.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Cmi_format instead.\"]" > $@
	echo "include Ocamlcommon.Cmi_format" >> $@
compilerlibs/ocamlcommon__persistent_env.ml: typing/persistent_env.ml
	(echo "# 1 \"typing/persistent_env.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__persistent_env.mli: typing/persistent_env.mli
	(echo "# 1 \"typing/persistent_env.mli\""; cat $<) > $@
compilerlibs/unprefixed/persistent_env.ml: typing/persistent_env.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Persistent_env instead.\"]" > $@
	echo "include Ocamlcommon.Persistent_env" >> $@
compilerlibs/ocamlcommon__env.ml: typing/env.ml
	(echo "# 1 \"typing/env.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__env.mli: typing/env.mli
	(echo "# 1 \"typing/env.mli\""; cat $<) > $@
compilerlibs/unprefixed/env.ml: typing/env.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Env instead.\"]" > $@
	echo "include Ocamlcommon.Env" >> $@
compilerlibs/ocamlcommon__typedtree.ml: typing/typedtree.ml
	(echo "# 1 \"typing/typedtree.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedtree.mli: typing/typedtree.mli
	(echo "# 1 \"typing/typedtree.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedtree.ml: typing/typedtree.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedtree instead.\"]" > $@
	echo "include Ocamlcommon.Typedtree" >> $@
compilerlibs/ocamlcommon__printtyped.ml: typing/printtyped.ml
	(echo "# 1 \"typing/printtyped.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__printtyped.mli: typing/printtyped.mli
	(echo "# 1 \"typing/printtyped.mli\""; cat $<) > $@
compilerlibs/unprefixed/printtyped.ml: typing/printtyped.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Printtyped instead.\"]" > $@
	echo "include Ocamlcommon.Printtyped" >> $@
compilerlibs/ocamlcommon__ctype.ml: typing/ctype.ml
	(echo "# 1 \"typing/ctype.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__ctype.mli: typing/ctype.mli
	(echo "# 1 \"typing/ctype.mli\""; cat $<) > $@
compilerlibs/unprefixed/ctype.ml: typing/ctype.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Ctype instead.\"]" > $@
	echo "include Ocamlcommon.Ctype" >> $@
compilerlibs/ocamlcommon__printtyp.ml: typing/printtyp.ml
	(echo "# 1 \"typing/printtyp.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__printtyp.mli: typing/printtyp.mli
	(echo "# 1 \"typing/printtyp.mli\""; cat $<) > $@
compilerlibs/unprefixed/printtyp.ml: typing/printtyp.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Printtyp instead.\"]" > $@
	echo "include Ocamlcommon.Printtyp" >> $@
compilerlibs/ocamlcommon__includeclass.ml: typing/includeclass.ml
	(echo "# 1 \"typing/includeclass.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__includeclass.mli: typing/includeclass.mli
	(echo "# 1 \"typing/includeclass.mli\""; cat $<) > $@
compilerlibs/unprefixed/includeclass.ml: typing/includeclass.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Includeclass instead.\"]" > $@
	echo "include Ocamlcommon.Includeclass" >> $@
compilerlibs/ocamlcommon__mtype.ml: typing/mtype.ml
	(echo "# 1 \"typing/mtype.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__mtype.mli: typing/mtype.mli
	(echo "# 1 \"typing/mtype.mli\""; cat $<) > $@
compilerlibs/unprefixed/mtype.ml: typing/mtype.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Mtype instead.\"]" > $@
	echo "include Ocamlcommon.Mtype" >> $@
compilerlibs/ocamlcommon__envaux.ml: typing/envaux.ml
	(echo "# 1 \"typing/envaux.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__envaux.mli: typing/envaux.mli
	(echo "# 1 \"typing/envaux.mli\""; cat $<) > $@
compilerlibs/unprefixed/envaux.ml: typing/envaux.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Envaux instead.\"]" > $@
	echo "include Ocamlcommon.Envaux" >> $@
compilerlibs/ocamlcommon__includecore.ml: typing/includecore.ml
	(echo "# 1 \"typing/includecore.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__includecore.mli: typing/includecore.mli
	(echo "# 1 \"typing/includecore.mli\""; cat $<) > $@
compilerlibs/unprefixed/includecore.ml: typing/includecore.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Includecore instead.\"]" > $@
	echo "include Ocamlcommon.Includecore" >> $@
compilerlibs/ocamlcommon__typedtreeIter.ml: typing/typedtreeIter.ml
	(echo "# 1 \"typing/typedtreeIter.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedtreeIter.mli: typing/typedtreeIter.mli
	(echo "# 1 \"typing/typedtreeIter.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedtreeIter.ml: typing/typedtreeIter.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.TypedtreeIter instead.\"]" > $@
	echo "include Ocamlcommon.TypedtreeIter" >> $@
compilerlibs/ocamlcommon__tast_mapper.ml: typing/tast_mapper.ml
	(echo "# 1 \"typing/tast_mapper.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__tast_mapper.mli: typing/tast_mapper.mli
	(echo "# 1 \"typing/tast_mapper.mli\""; cat $<) > $@
compilerlibs/unprefixed/tast_mapper.ml: typing/tast_mapper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Tast_mapper instead.\"]" > $@
	echo "include Ocamlcommon.Tast_mapper" >> $@
compilerlibs/ocamlcommon__cmt_format.ml: typing/cmt_format.ml
	(echo "# 1 \"typing/cmt_format.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__cmt_format.mli: typing/cmt_format.mli
	(echo "# 1 \"typing/cmt_format.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmt_format.ml: typing/cmt_format.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Cmt_format instead.\"]" > $@
	echo "include Ocamlcommon.Cmt_format" >> $@
compilerlibs/ocamlcommon__untypeast.ml: typing/untypeast.ml
	(echo "# 1 \"typing/untypeast.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__untypeast.mli: typing/untypeast.mli
	(echo "# 1 \"typing/untypeast.mli\""; cat $<) > $@
compilerlibs/unprefixed/untypeast.ml: typing/untypeast.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Untypeast instead.\"]" > $@
	echo "include Ocamlcommon.Untypeast" >> $@
compilerlibs/ocamlcommon__includemod.ml: typing/includemod.ml
	(echo "# 1 \"typing/includemod.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__includemod.mli: typing/includemod.mli
	(echo "# 1 \"typing/includemod.mli\""; cat $<) > $@
compilerlibs/unprefixed/includemod.ml: typing/includemod.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Includemod instead.\"]" > $@
	echo "include Ocamlcommon.Includemod" >> $@
compilerlibs/ocamlcommon__typetexp.ml: typing/typetexp.ml
	(echo "# 1 \"typing/typetexp.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typetexp.mli: typing/typetexp.mli
	(echo "# 1 \"typing/typetexp.mli\""; cat $<) > $@
compilerlibs/unprefixed/typetexp.ml: typing/typetexp.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typetexp instead.\"]" > $@
	echo "include Ocamlcommon.Typetexp" >> $@
compilerlibs/ocamlcommon__printpat.ml: typing/printpat.ml
	(echo "# 1 \"typing/printpat.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__printpat.mli: typing/printpat.mli
	(echo "# 1 \"typing/printpat.mli\""; cat $<) > $@
compilerlibs/unprefixed/printpat.ml: typing/printpat.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Printpat instead.\"]" > $@
	echo "include Ocamlcommon.Printpat" >> $@
compilerlibs/ocamlcommon__parmatch.ml: typing/parmatch.ml
	(echo "# 1 \"typing/parmatch.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__parmatch.mli: typing/parmatch.mli
	(echo "# 1 \"typing/parmatch.mli\""; cat $<) > $@
compilerlibs/unprefixed/parmatch.ml: typing/parmatch.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Parmatch instead.\"]" > $@
	echo "include Ocamlcommon.Parmatch" >> $@
compilerlibs/ocamlcommon__annot.ml: typing/annot.ml
	(echo "# 1 \"typing/annot.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__annot.mli: typing/annot.mli
	(echo "# 1 \"typing/annot.mli\""; cat $<) > $@
compilerlibs/unprefixed/annot.ml: typing/annot.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Annot instead.\"]" > $@
	echo "include Ocamlcommon.Annot" >> $@
compilerlibs/ocamlcommon__stypes.ml: typing/stypes.ml
	(echo "# 1 \"typing/stypes.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__stypes.mli: typing/stypes.mli
	(echo "# 1 \"typing/stypes.mli\""; cat $<) > $@
compilerlibs/unprefixed/stypes.ml: typing/stypes.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Stypes instead.\"]" > $@
	echo "include Ocamlcommon.Stypes" >> $@
compilerlibs/ocamlcommon__typedecl_properties.ml: typing/typedecl_properties.ml
	(echo "# 1 \"typing/typedecl_properties.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedecl_properties.mli: typing/typedecl_properties.mli
	(echo "# 1 \"typing/typedecl_properties.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedecl_properties.ml: typing/typedecl_properties.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedecl_properties instead.\"]" > $@
	echo "include Ocamlcommon.Typedecl_properties" >> $@
compilerlibs/ocamlcommon__typedecl_variance.ml: typing/typedecl_variance.ml
	(echo "# 1 \"typing/typedecl_variance.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedecl_variance.mli: typing/typedecl_variance.mli
	(echo "# 1 \"typing/typedecl_variance.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedecl_variance.ml: typing/typedecl_variance.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedecl_variance instead.\"]" > $@
	echo "include Ocamlcommon.Typedecl_variance" >> $@
compilerlibs/ocamlcommon__typedecl_unboxed.ml: typing/typedecl_unboxed.ml
	(echo "# 1 \"typing/typedecl_unboxed.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedecl_unboxed.mli: typing/typedecl_unboxed.mli
	(echo "# 1 \"typing/typedecl_unboxed.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedecl_unboxed.ml: typing/typedecl_unboxed.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedecl_unboxed instead.\"]" > $@
	echo "include Ocamlcommon.Typedecl_unboxed" >> $@
compilerlibs/ocamlcommon__typedecl_immediacy.ml: typing/typedecl_immediacy.ml
	(echo "# 1 \"typing/typedecl_immediacy.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedecl_immediacy.mli: typing/typedecl_immediacy.mli
	(echo "# 1 \"typing/typedecl_immediacy.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedecl_immediacy.ml: typing/typedecl_immediacy.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedecl_immediacy instead.\"]" > $@
	echo "include Ocamlcommon.Typedecl_immediacy" >> $@
compilerlibs/ocamlcommon__typedecl.ml: typing/typedecl.ml
	(echo "# 1 \"typing/typedecl.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typedecl.mli: typing/typedecl.mli
	(echo "# 1 \"typing/typedecl.mli\""; cat $<) > $@
compilerlibs/unprefixed/typedecl.ml: typing/typedecl.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typedecl instead.\"]" > $@
	echo "include Ocamlcommon.Typedecl" >> $@
compilerlibs/ocamlcommon__typeopt.ml: typing/typeopt.ml
	(echo "# 1 \"typing/typeopt.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typeopt.mli: typing/typeopt.mli
	(echo "# 1 \"typing/typeopt.mli\""; cat $<) > $@
compilerlibs/unprefixed/typeopt.ml: typing/typeopt.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typeopt instead.\"]" > $@
	echo "include Ocamlcommon.Typeopt" >> $@
compilerlibs/ocamlcommon__rec_check.ml: typing/rec_check.ml
	(echo "# 1 \"typing/rec_check.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__rec_check.mli: typing/rec_check.mli
	(echo "# 1 \"typing/rec_check.mli\""; cat $<) > $@
compilerlibs/unprefixed/rec_check.ml: typing/rec_check.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Rec_check instead.\"]" > $@
	echo "include Ocamlcommon.Rec_check" >> $@
compilerlibs/ocamlcommon__typecore.ml: typing/typecore.ml
	(echo "# 1 \"typing/typecore.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typecore.mli: typing/typecore.mli
	(echo "# 1 \"typing/typecore.mli\""; cat $<) > $@
compilerlibs/unprefixed/typecore.ml: typing/typecore.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typecore instead.\"]" > $@
	echo "include Ocamlcommon.Typecore" >> $@
compilerlibs/ocamlcommon__typeclass.ml: typing/typeclass.ml
	(echo "# 1 \"typing/typeclass.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typeclass.mli: typing/typeclass.mli
	(echo "# 1 \"typing/typeclass.mli\""; cat $<) > $@
compilerlibs/unprefixed/typeclass.ml: typing/typeclass.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typeclass instead.\"]" > $@
	echo "include Ocamlcommon.Typeclass" >> $@
compilerlibs/ocamlcommon__typemod.ml: typing/typemod.ml
	(echo "# 1 \"typing/typemod.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__typemod.mli: typing/typemod.mli
	(echo "# 1 \"typing/typemod.mli\""; cat $<) > $@
compilerlibs/unprefixed/typemod.ml: typing/typemod.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Typemod instead.\"]" > $@
	echo "include Ocamlcommon.Typemod" >> $@
compilerlibs/ocamlcommon__lambda.ml: bytecomp/lambda.ml
	(echo "# 1 \"bytecomp/lambda.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__lambda.mli: bytecomp/lambda.mli
	(echo "# 1 \"bytecomp/lambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/lambda.ml: bytecomp/lambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Lambda instead.\"]" > $@
	echo "include Ocamlcommon.Lambda" >> $@
compilerlibs/ocamlcommon__printlambda.ml: bytecomp/printlambda.ml
	(echo "# 1 \"bytecomp/printlambda.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__printlambda.mli: bytecomp/printlambda.mli
	(echo "# 1 \"bytecomp/printlambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/printlambda.ml: bytecomp/printlambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Printlambda instead.\"]" > $@
	echo "include Ocamlcommon.Printlambda" >> $@
compilerlibs/ocamlcommon__switch.ml: bytecomp/switch.ml
	(echo "# 1 \"bytecomp/switch.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__switch.mli: bytecomp/switch.mli
	(echo "# 1 \"bytecomp/switch.mli\""; cat $<) > $@
compilerlibs/unprefixed/switch.ml: bytecomp/switch.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Switch instead.\"]" > $@
	echo "include Ocamlcommon.Switch" >> $@
compilerlibs/ocamlcommon__matching.ml: bytecomp/matching.ml
	(echo "# 1 \"bytecomp/matching.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__matching.mli: bytecomp/matching.mli
	(echo "# 1 \"bytecomp/matching.mli\""; cat $<) > $@
compilerlibs/unprefixed/matching.ml: bytecomp/matching.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Matching instead.\"]" > $@
	echo "include Ocamlcommon.Matching" >> $@
compilerlibs/ocamlcommon__translobj.ml: bytecomp/translobj.ml
	(echo "# 1 \"bytecomp/translobj.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translobj.mli: bytecomp/translobj.mli
	(echo "# 1 \"bytecomp/translobj.mli\""; cat $<) > $@
compilerlibs/unprefixed/translobj.ml: bytecomp/translobj.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translobj instead.\"]" > $@
	echo "include Ocamlcommon.Translobj" >> $@
compilerlibs/ocamlcommon__translattribute.ml: bytecomp/translattribute.ml
	(echo "# 1 \"bytecomp/translattribute.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translattribute.mli: bytecomp/translattribute.mli
	(echo "# 1 \"bytecomp/translattribute.mli\""; cat $<) > $@
compilerlibs/unprefixed/translattribute.ml: bytecomp/translattribute.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translattribute instead.\"]" > $@
	echo "include Ocamlcommon.Translattribute" >> $@
compilerlibs/ocamlcommon__translprim.ml: bytecomp/translprim.ml
	(echo "# 1 \"bytecomp/translprim.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translprim.mli: bytecomp/translprim.mli
	(echo "# 1 \"bytecomp/translprim.mli\""; cat $<) > $@
compilerlibs/unprefixed/translprim.ml: bytecomp/translprim.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translprim instead.\"]" > $@
	echo "include Ocamlcommon.Translprim" >> $@
compilerlibs/ocamlcommon__translcore.ml: bytecomp/translcore.ml
	(echo "# 1 \"bytecomp/translcore.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translcore.mli: bytecomp/translcore.mli
	(echo "# 1 \"bytecomp/translcore.mli\""; cat $<) > $@
compilerlibs/unprefixed/translcore.ml: bytecomp/translcore.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translcore instead.\"]" > $@
	echo "include Ocamlcommon.Translcore" >> $@
compilerlibs/ocamlcommon__translclass.ml: bytecomp/translclass.ml
	(echo "# 1 \"bytecomp/translclass.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translclass.mli: bytecomp/translclass.mli
	(echo "# 1 \"bytecomp/translclass.mli\""; cat $<) > $@
compilerlibs/unprefixed/translclass.ml: bytecomp/translclass.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translclass instead.\"]" > $@
	echo "include Ocamlcommon.Translclass" >> $@
compilerlibs/ocamlcommon__translmod.ml: bytecomp/translmod.ml
	(echo "# 1 \"bytecomp/translmod.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__translmod.mli: bytecomp/translmod.mli
	(echo "# 1 \"bytecomp/translmod.mli\""; cat $<) > $@
compilerlibs/unprefixed/translmod.ml: bytecomp/translmod.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Translmod instead.\"]" > $@
	echo "include Ocamlcommon.Translmod" >> $@
compilerlibs/ocamlcommon__simplif.ml: bytecomp/simplif.ml
	(echo "# 1 \"bytecomp/simplif.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__simplif.mli: bytecomp/simplif.mli
	(echo "# 1 \"bytecomp/simplif.mli\""; cat $<) > $@
compilerlibs/unprefixed/simplif.ml: bytecomp/simplif.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Simplif instead.\"]" > $@
	echo "include Ocamlcommon.Simplif" >> $@
compilerlibs/ocamlcommon__runtimedef.ml: bytecomp/runtimedef.ml
	(echo "# 1 \"bytecomp/runtimedef.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__runtimedef.mli: bytecomp/runtimedef.mli
	(echo "# 1 \"bytecomp/runtimedef.mli\""; cat $<) > $@
compilerlibs/unprefixed/runtimedef.ml: bytecomp/runtimedef.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Runtimedef instead.\"]" > $@
	echo "include Ocamlcommon.Runtimedef" >> $@
compilerlibs/ocamlcommon__instruct.ml: bytecomp/instruct.ml
	(echo "# 1 \"bytecomp/instruct.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__instruct.mli: bytecomp/instruct.mli
	(echo "# 1 \"bytecomp/instruct.mli\""; cat $<) > $@
compilerlibs/unprefixed/instruct.ml: bytecomp/instruct.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Instruct instead.\"]" > $@
	echo "include Ocamlcommon.Instruct" >> $@
compilerlibs/ocamlcommon__meta.ml: bytecomp/meta.ml
	(echo "# 1 \"bytecomp/meta.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__meta.mli: bytecomp/meta.mli
	(echo "# 1 \"bytecomp/meta.mli\""; cat $<) > $@
compilerlibs/unprefixed/meta.ml: bytecomp/meta.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Meta instead.\"]" > $@
	echo "include Ocamlcommon.Meta" >> $@
compilerlibs/ocamlcommon__opcodes.ml: bytecomp/opcodes.ml
	(echo "# 1 \"bytecomp/opcodes.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__opcodes.mli: bytecomp/opcodes.mli
	(echo "# 1 \"bytecomp/opcodes.mli\""; cat $<) > $@
compilerlibs/unprefixed/opcodes.ml: bytecomp/opcodes.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Opcodes instead.\"]" > $@
	echo "include Ocamlcommon.Opcodes" >> $@
compilerlibs/ocamlcommon__bytesections.ml: bytecomp/bytesections.ml
	(echo "# 1 \"bytecomp/bytesections.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__bytesections.mli: bytecomp/bytesections.mli
	(echo "# 1 \"bytecomp/bytesections.mli\""; cat $<) > $@
compilerlibs/unprefixed/bytesections.ml: bytecomp/bytesections.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Bytesections instead.\"]" > $@
	echo "include Ocamlcommon.Bytesections" >> $@
compilerlibs/ocamlcommon__dll.ml: bytecomp/dll.ml
	(echo "# 1 \"bytecomp/dll.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__dll.mli: bytecomp/dll.mli
	(echo "# 1 \"bytecomp/dll.mli\""; cat $<) > $@
compilerlibs/unprefixed/dll.ml: bytecomp/dll.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Dll instead.\"]" > $@
	echo "include Ocamlcommon.Dll" >> $@
compilerlibs/ocamlcommon__cmo_format.ml: bytecomp/cmo_format.ml
	(echo "# 1 \"bytecomp/cmo_format.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__cmo_format.mli: bytecomp/cmo_format.mli
	(echo "# 1 \"bytecomp/cmo_format.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmo_format.ml: bytecomp/cmo_format.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Cmo_format instead.\"]" > $@
	echo "include Ocamlcommon.Cmo_format" >> $@
compilerlibs/ocamlcommon__symtable.ml: bytecomp/symtable.ml
	(echo "# 1 \"bytecomp/symtable.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__symtable.mli: bytecomp/symtable.mli
	(echo "# 1 \"bytecomp/symtable.mli\""; cat $<) > $@
compilerlibs/unprefixed/symtable.ml: bytecomp/symtable.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Symtable instead.\"]" > $@
	echo "include Ocamlcommon.Symtable" >> $@
compilerlibs/ocamlcommon__pparse.ml: driver/pparse.ml
	(echo "# 1 \"driver/pparse.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__pparse.mli: driver/pparse.mli
	(echo "# 1 \"driver/pparse.mli\""; cat $<) > $@
compilerlibs/unprefixed/pparse.ml: driver/pparse.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Pparse instead.\"]" > $@
	echo "include Ocamlcommon.Pparse" >> $@
compilerlibs/ocamlcommon__main_args.ml: driver/main_args.ml
	(echo "# 1 \"driver/main_args.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__main_args.mli: driver/main_args.mli
	(echo "# 1 \"driver/main_args.mli\""; cat $<) > $@
compilerlibs/unprefixed/main_args.ml: driver/main_args.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Main_args instead.\"]" > $@
	echo "include Ocamlcommon.Main_args" >> $@
compilerlibs/ocamlcommon__compenv.ml: driver/compenv.ml
	(echo "# 1 \"driver/compenv.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__compenv.mli: driver/compenv.mli
	(echo "# 1 \"driver/compenv.mli\""; cat $<) > $@
compilerlibs/unprefixed/compenv.ml: driver/compenv.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Compenv instead.\"]" > $@
	echo "include Ocamlcommon.Compenv" >> $@
compilerlibs/ocamlcommon__compmisc.ml: driver/compmisc.ml
	(echo "# 1 \"driver/compmisc.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__compmisc.mli: driver/compmisc.mli
	(echo "# 1 \"driver/compmisc.mli\""; cat $<) > $@
compilerlibs/unprefixed/compmisc.ml: driver/compmisc.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Compmisc instead.\"]" > $@
	echo "include Ocamlcommon.Compmisc" >> $@
compilerlibs/ocamlcommon__makedepend.ml: driver/makedepend.ml
	(echo "# 1 \"driver/makedepend.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__makedepend.mli: driver/makedepend.mli
	(echo "# 1 \"driver/makedepend.mli\""; cat $<) > $@
compilerlibs/unprefixed/makedepend.ml: driver/makedepend.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Makedepend instead.\"]" > $@
	echo "include Ocamlcommon.Makedepend" >> $@
compilerlibs/ocamlcommon__compile_common.ml: driver/compile_common.ml
	(echo "# 1 \"driver/compile_common.ml\""; cat $<) > $@
compilerlibs/ocamlcommon__compile_common.mli: driver/compile_common.mli
	(echo "# 1 \"driver/compile_common.mli\""; cat $<) > $@
compilerlibs/unprefixed/compile_common.ml: driver/compile_common.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlcommon.Compile_common instead.\"]" > $@
	echo "include Ocamlcommon.Compile_common" >> $@
compilerlibs/ocamlcommon.ml: Makefile
	echo "module Annot                         = Ocamlcommon__annot" > $@
	echo "module Arg_helper                    = Ocamlcommon__arg_helper" >> $@
	echo "module Ast_helper                    = Ocamlcommon__ast_helper" >> $@
	echo "module Ast_invariants                = Ocamlcommon__ast_invariants" >> $@
	echo "module Ast_iterator                  = Ocamlcommon__ast_iterator" >> $@
	echo "module Ast_mapper                    = Ocamlcommon__ast_mapper" >> $@
	echo "module Asttypes                      = Ocamlcommon__asttypes" >> $@
	echo "module Attr_helper                   = Ocamlcommon__attr_helper" >> $@
	echo "module Btype                         = Ocamlcommon__btype" >> $@
	echo "module Build_path_prefix_map         = Ocamlcommon__build_path_prefix_map" >> $@
	echo "module Builtin_attributes            = Ocamlcommon__builtin_attributes" >> $@
	echo "module Bytesections                  = Ocamlcommon__bytesections" >> $@
	echo "module CamlinternalMenhirLib         = Ocamlcommon__camlinternalMenhirLib" >> $@
	echo "module Ccomp                         = Ocamlcommon__ccomp" >> $@
	echo "module Clflags                       = Ocamlcommon__clflags" >> $@
	echo "module Cmi_format                    = Ocamlcommon__cmi_format" >> $@
	echo "module Cmo_format                    = Ocamlcommon__cmo_format" >> $@
	echo "module Cmt_format                    = Ocamlcommon__cmt_format" >> $@
	echo "module Compenv                       = Ocamlcommon__compenv" >> $@
	echo "module Compile_common                = Ocamlcommon__compile_common" >> $@
	echo "module Compmisc                      = Ocamlcommon__compmisc" >> $@
	echo "module Config                        = Ocamlcommon__config" >> $@
	echo "module Consistbl                     = Ocamlcommon__consistbl" >> $@
	echo "module Ctype                         = Ocamlcommon__ctype" >> $@
	echo "module Datarepr                      = Ocamlcommon__datarepr" >> $@
	echo "module Depend                        = Ocamlcommon__depend" >> $@
	echo "module Dll                           = Ocamlcommon__dll" >> $@
	echo "module Docstrings                    = Ocamlcommon__docstrings" >> $@
	echo "module Env                           = Ocamlcommon__env" >> $@
	echo "module Envaux                        = Ocamlcommon__envaux" >> $@
	echo "module Ident                         = Ocamlcommon__ident" >> $@
	echo "module Identifiable                  = Ocamlcommon__identifiable" >> $@
	echo "module Includeclass                  = Ocamlcommon__includeclass" >> $@
	echo "module Includecore                   = Ocamlcommon__includecore" >> $@
	echo "module Includemod                    = Ocamlcommon__includemod" >> $@
	echo "module Instruct                      = Ocamlcommon__instruct" >> $@
	echo "module Lambda                        = Ocamlcommon__lambda" >> $@
	echo "module Lexer                         = Ocamlcommon__lexer" >> $@
	echo "module Load_path                     = Ocamlcommon__load_path" >> $@
	echo "module Location                      = Ocamlcommon__location" >> $@
	echo "module Longident                     = Ocamlcommon__longident" >> $@
	echo "module Main_args                     = Ocamlcommon__main_args" >> $@
	echo "module Makedepend                    = Ocamlcommon__makedepend" >> $@
	echo "module Matching                      = Ocamlcommon__matching" >> $@
	echo "module Meta                          = Ocamlcommon__meta" >> $@
	echo "module Misc                          = Ocamlcommon__misc" >> $@
	echo "module Mtype                         = Ocamlcommon__mtype" >> $@
	echo "module Numbers                       = Ocamlcommon__numbers" >> $@
	echo "module Opcodes                       = Ocamlcommon__opcodes" >> $@
	echo "module Oprint                        = Ocamlcommon__oprint" >> $@
	echo "module Outcometree                   = Ocamlcommon__outcometree" >> $@
	echo "module Parmatch                      = Ocamlcommon__parmatch" >> $@
	echo "module Parse                         = Ocamlcommon__parse" >> $@
	echo "module Parser                        = Ocamlcommon__parser" >> $@
	echo "module Parsetree                     = Ocamlcommon__parsetree" >> $@
	echo "module Path                          = Ocamlcommon__path" >> $@
	echo "module Persistent_env                = Ocamlcommon__persistent_env" >> $@
	echo "module Pparse                        = Ocamlcommon__pparse" >> $@
	echo "module Pprintast                     = Ocamlcommon__pprintast" >> $@
	echo "module Predef                        = Ocamlcommon__predef" >> $@
	echo "module Primitive                     = Ocamlcommon__primitive" >> $@
	echo "module Printast                      = Ocamlcommon__printast" >> $@
	echo "module Printlambda                   = Ocamlcommon__printlambda" >> $@
	echo "module Printpat                      = Ocamlcommon__printpat" >> $@
	echo "module Printtyp                      = Ocamlcommon__printtyp" >> $@
	echo "module Printtyped                    = Ocamlcommon__printtyped" >> $@
	echo "module Profile                       = Ocamlcommon__profile" >> $@
	echo "module Rec_check                     = Ocamlcommon__rec_check" >> $@
	echo "module Runtimedef                    = Ocamlcommon__runtimedef" >> $@
	echo "module Simplif                       = Ocamlcommon__simplif" >> $@
	echo "module Strongly_connected_components = Ocamlcommon__strongly_connected_components" >> $@
	echo "module Stypes                        = Ocamlcommon__stypes" >> $@
	echo "module Subst                         = Ocamlcommon__subst" >> $@
	echo "module Switch                        = Ocamlcommon__switch" >> $@
	echo "module Symtable                      = Ocamlcommon__symtable" >> $@
	echo "module Syntaxerr                     = Ocamlcommon__syntaxerr" >> $@
	echo "module Targetint                     = Ocamlcommon__targetint" >> $@
	echo "module Tast_mapper                   = Ocamlcommon__tast_mapper" >> $@
	echo "module Terminfo                      = Ocamlcommon__terminfo" >> $@
	echo "module Translattribute               = Ocamlcommon__translattribute" >> $@
	echo "module Translclass                   = Ocamlcommon__translclass" >> $@
	echo "module Translcore                    = Ocamlcommon__translcore" >> $@
	echo "module Translmod                     = Ocamlcommon__translmod" >> $@
	echo "module Translobj                     = Ocamlcommon__translobj" >> $@
	echo "module Translprim                    = Ocamlcommon__translprim" >> $@
	echo "module Typeclass                     = Ocamlcommon__typeclass" >> $@
	echo "module Typecore                      = Ocamlcommon__typecore" >> $@
	echo "module Typedecl                      = Ocamlcommon__typedecl" >> $@
	echo "module Typedecl_immediacy            = Ocamlcommon__typedecl_immediacy" >> $@
	echo "module Typedecl_properties           = Ocamlcommon__typedecl_properties" >> $@
	echo "module Typedecl_unboxed              = Ocamlcommon__typedecl_unboxed" >> $@
	echo "module Typedecl_variance             = Ocamlcommon__typedecl_variance" >> $@
	echo "module Typedtree                     = Ocamlcommon__typedtree" >> $@
	echo "module TypedtreeIter                 = Ocamlcommon__typedtreeIter" >> $@
	echo "module Typemod                       = Ocamlcommon__typemod" >> $@
	echo "module Typeopt                       = Ocamlcommon__typeopt" >> $@
	echo "module Types                         = Ocamlcommon__types" >> $@
	echo "module Typetexp                      = Ocamlcommon__typetexp" >> $@
	echo "module Untypeast                     = Ocamlcommon__untypeast" >> $@
	echo "module Warnings                      = Ocamlcommon__warnings" >> $@
beforedepend:: compilerlibs/ocamlcommon.ml \
	compilerlibs/ocamlcommon__annot.ml \
	compilerlibs/ocamlcommon__annot.mli \
	compilerlibs/unprefixed/annot.ml \
	compilerlibs/ocamlcommon__arg_helper.ml \
	compilerlibs/ocamlcommon__arg_helper.mli \
	compilerlibs/unprefixed/arg_helper.ml \
	compilerlibs/ocamlcommon__ast_helper.ml \
	compilerlibs/ocamlcommon__ast_helper.mli \
	compilerlibs/unprefixed/ast_helper.ml \
	compilerlibs/ocamlcommon__ast_invariants.ml \
	compilerlibs/ocamlcommon__ast_invariants.mli \
	compilerlibs/unprefixed/ast_invariants.ml \
	compilerlibs/ocamlcommon__ast_iterator.ml \
	compilerlibs/ocamlcommon__ast_iterator.mli \
	compilerlibs/unprefixed/ast_iterator.ml \
	compilerlibs/ocamlcommon__ast_mapper.ml \
	compilerlibs/ocamlcommon__ast_mapper.mli \
	compilerlibs/unprefixed/ast_mapper.ml \
	compilerlibs/ocamlcommon__asttypes.ml \
	compilerlibs/ocamlcommon__asttypes.mli \
	compilerlibs/unprefixed/asttypes.ml \
	compilerlibs/ocamlcommon__attr_helper.ml \
	compilerlibs/ocamlcommon__attr_helper.mli \
	compilerlibs/unprefixed/attr_helper.ml \
	compilerlibs/ocamlcommon__btype.ml \
	compilerlibs/ocamlcommon__btype.mli \
	compilerlibs/unprefixed/btype.ml \
	compilerlibs/ocamlcommon__build_path_prefix_map.ml \
	compilerlibs/ocamlcommon__build_path_prefix_map.mli \
	compilerlibs/unprefixed/build_path_prefix_map.ml \
	compilerlibs/ocamlcommon__builtin_attributes.ml \
	compilerlibs/ocamlcommon__builtin_attributes.mli \
	compilerlibs/unprefixed/builtin_attributes.ml \
	compilerlibs/ocamlcommon__bytesections.ml \
	compilerlibs/ocamlcommon__bytesections.mli \
	compilerlibs/unprefixed/bytesections.ml \
	compilerlibs/ocamlcommon__camlinternalMenhirLib.ml \
	compilerlibs/ocamlcommon__camlinternalMenhirLib.mli \
	compilerlibs/unprefixed/camlinternalMenhirLib.ml \
	compilerlibs/ocamlcommon__ccomp.ml \
	compilerlibs/ocamlcommon__ccomp.mli \
	compilerlibs/unprefixed/ccomp.ml \
	compilerlibs/ocamlcommon__clflags.ml \
	compilerlibs/ocamlcommon__clflags.mli \
	compilerlibs/unprefixed/clflags.ml \
	compilerlibs/ocamlcommon__cmi_format.ml \
	compilerlibs/ocamlcommon__cmi_format.mli \
	compilerlibs/unprefixed/cmi_format.ml \
	compilerlibs/ocamlcommon__cmo_format.ml \
	compilerlibs/ocamlcommon__cmo_format.mli \
	compilerlibs/unprefixed/cmo_format.ml \
	compilerlibs/ocamlcommon__cmt_format.ml \
	compilerlibs/ocamlcommon__cmt_format.mli \
	compilerlibs/unprefixed/cmt_format.ml \
	compilerlibs/ocamlcommon__compenv.ml \
	compilerlibs/ocamlcommon__compenv.mli \
	compilerlibs/unprefixed/compenv.ml \
	compilerlibs/ocamlcommon__compile_common.ml \
	compilerlibs/ocamlcommon__compile_common.mli \
	compilerlibs/unprefixed/compile_common.ml \
	compilerlibs/ocamlcommon__compmisc.ml \
	compilerlibs/ocamlcommon__compmisc.mli \
	compilerlibs/unprefixed/compmisc.ml \
	compilerlibs/ocamlcommon__config.ml \
	compilerlibs/ocamlcommon__config.mli \
	compilerlibs/unprefixed/config.ml \
	compilerlibs/ocamlcommon__consistbl.ml \
	compilerlibs/ocamlcommon__consistbl.mli \
	compilerlibs/unprefixed/consistbl.ml \
	compilerlibs/ocamlcommon__ctype.ml \
	compilerlibs/ocamlcommon__ctype.mli \
	compilerlibs/unprefixed/ctype.ml \
	compilerlibs/ocamlcommon__datarepr.ml \
	compilerlibs/ocamlcommon__datarepr.mli \
	compilerlibs/unprefixed/datarepr.ml \
	compilerlibs/ocamlcommon__depend.ml \
	compilerlibs/ocamlcommon__depend.mli \
	compilerlibs/unprefixed/depend.ml \
	compilerlibs/ocamlcommon__dll.ml \
	compilerlibs/ocamlcommon__dll.mli \
	compilerlibs/unprefixed/dll.ml \
	compilerlibs/ocamlcommon__docstrings.ml \
	compilerlibs/ocamlcommon__docstrings.mli \
	compilerlibs/unprefixed/docstrings.ml \
	compilerlibs/ocamlcommon__env.ml \
	compilerlibs/ocamlcommon__env.mli \
	compilerlibs/unprefixed/env.ml \
	compilerlibs/ocamlcommon__envaux.ml \
	compilerlibs/ocamlcommon__envaux.mli \
	compilerlibs/unprefixed/envaux.ml \
	compilerlibs/ocamlcommon__ident.ml \
	compilerlibs/ocamlcommon__ident.mli \
	compilerlibs/unprefixed/ident.ml \
	compilerlibs/ocamlcommon__identifiable.ml \
	compilerlibs/ocamlcommon__identifiable.mli \
	compilerlibs/unprefixed/identifiable.ml \
	compilerlibs/ocamlcommon__includeclass.ml \
	compilerlibs/ocamlcommon__includeclass.mli \
	compilerlibs/unprefixed/includeclass.ml \
	compilerlibs/ocamlcommon__includecore.ml \
	compilerlibs/ocamlcommon__includecore.mli \
	compilerlibs/unprefixed/includecore.ml \
	compilerlibs/ocamlcommon__includemod.ml \
	compilerlibs/ocamlcommon__includemod.mli \
	compilerlibs/unprefixed/includemod.ml \
	compilerlibs/ocamlcommon__instruct.ml \
	compilerlibs/ocamlcommon__instruct.mli \
	compilerlibs/unprefixed/instruct.ml \
	compilerlibs/ocamlcommon__lambda.ml \
	compilerlibs/ocamlcommon__lambda.mli \
	compilerlibs/unprefixed/lambda.ml \
	compilerlibs/ocamlcommon__lexer.ml \
	compilerlibs/ocamlcommon__lexer.mli \
	compilerlibs/unprefixed/lexer.ml \
	compilerlibs/ocamlcommon__load_path.ml \
	compilerlibs/ocamlcommon__load_path.mli \
	compilerlibs/unprefixed/load_path.ml \
	compilerlibs/ocamlcommon__location.ml \
	compilerlibs/ocamlcommon__location.mli \
	compilerlibs/unprefixed/location.ml \
	compilerlibs/ocamlcommon__longident.ml \
	compilerlibs/ocamlcommon__longident.mli \
	compilerlibs/unprefixed/longident.ml \
	compilerlibs/ocamlcommon__main_args.ml \
	compilerlibs/ocamlcommon__main_args.mli \
	compilerlibs/unprefixed/main_args.ml \
	compilerlibs/ocamlcommon__makedepend.ml \
	compilerlibs/ocamlcommon__makedepend.mli \
	compilerlibs/unprefixed/makedepend.ml \
	compilerlibs/ocamlcommon__matching.ml \
	compilerlibs/ocamlcommon__matching.mli \
	compilerlibs/unprefixed/matching.ml \
	compilerlibs/ocamlcommon__meta.ml \
	compilerlibs/ocamlcommon__meta.mli \
	compilerlibs/unprefixed/meta.ml \
	compilerlibs/ocamlcommon__misc.ml \
	compilerlibs/ocamlcommon__misc.mli \
	compilerlibs/unprefixed/misc.ml \
	compilerlibs/ocamlcommon__mtype.ml \
	compilerlibs/ocamlcommon__mtype.mli \
	compilerlibs/unprefixed/mtype.ml \
	compilerlibs/ocamlcommon__numbers.ml \
	compilerlibs/ocamlcommon__numbers.mli \
	compilerlibs/unprefixed/numbers.ml \
	compilerlibs/ocamlcommon__opcodes.ml \
	compilerlibs/ocamlcommon__opcodes.mli \
	compilerlibs/unprefixed/opcodes.ml \
	compilerlibs/ocamlcommon__oprint.ml \
	compilerlibs/ocamlcommon__oprint.mli \
	compilerlibs/unprefixed/oprint.ml \
	compilerlibs/ocamlcommon__outcometree.ml \
	compilerlibs/ocamlcommon__outcometree.mli \
	compilerlibs/unprefixed/outcometree.ml \
	compilerlibs/ocamlcommon__parmatch.ml \
	compilerlibs/ocamlcommon__parmatch.mli \
	compilerlibs/unprefixed/parmatch.ml \
	compilerlibs/ocamlcommon__parse.ml \
	compilerlibs/ocamlcommon__parse.mli \
	compilerlibs/unprefixed/parse.ml \
	compilerlibs/ocamlcommon__parser.ml \
	compilerlibs/ocamlcommon__parser.mli \
	compilerlibs/unprefixed/parser.ml \
	compilerlibs/ocamlcommon__parsetree.ml \
	compilerlibs/ocamlcommon__parsetree.mli \
	compilerlibs/unprefixed/parsetree.ml \
	compilerlibs/ocamlcommon__path.ml \
	compilerlibs/ocamlcommon__path.mli \
	compilerlibs/unprefixed/path.ml \
	compilerlibs/ocamlcommon__persistent_env.ml \
	compilerlibs/ocamlcommon__persistent_env.mli \
	compilerlibs/unprefixed/persistent_env.ml \
	compilerlibs/ocamlcommon__pparse.ml \
	compilerlibs/ocamlcommon__pparse.mli \
	compilerlibs/unprefixed/pparse.ml \
	compilerlibs/ocamlcommon__pprintast.ml \
	compilerlibs/ocamlcommon__pprintast.mli \
	compilerlibs/unprefixed/pprintast.ml \
	compilerlibs/ocamlcommon__predef.ml \
	compilerlibs/ocamlcommon__predef.mli \
	compilerlibs/unprefixed/predef.ml \
	compilerlibs/ocamlcommon__primitive.ml \
	compilerlibs/ocamlcommon__primitive.mli \
	compilerlibs/unprefixed/primitive.ml \
	compilerlibs/ocamlcommon__printast.ml \
	compilerlibs/ocamlcommon__printast.mli \
	compilerlibs/unprefixed/printast.ml \
	compilerlibs/ocamlcommon__printlambda.ml \
	compilerlibs/ocamlcommon__printlambda.mli \
	compilerlibs/unprefixed/printlambda.ml \
	compilerlibs/ocamlcommon__printpat.ml \
	compilerlibs/ocamlcommon__printpat.mli \
	compilerlibs/unprefixed/printpat.ml \
	compilerlibs/ocamlcommon__printtyp.ml \
	compilerlibs/ocamlcommon__printtyp.mli \
	compilerlibs/unprefixed/printtyp.ml \
	compilerlibs/ocamlcommon__printtyped.ml \
	compilerlibs/ocamlcommon__printtyped.mli \
	compilerlibs/unprefixed/printtyped.ml \
	compilerlibs/ocamlcommon__profile.ml \
	compilerlibs/ocamlcommon__profile.mli \
	compilerlibs/unprefixed/profile.ml \
	compilerlibs/ocamlcommon__rec_check.ml \
	compilerlibs/ocamlcommon__rec_check.mli \
	compilerlibs/unprefixed/rec_check.ml \
	compilerlibs/ocamlcommon__runtimedef.ml \
	compilerlibs/ocamlcommon__runtimedef.mli \
	compilerlibs/unprefixed/runtimedef.ml \
	compilerlibs/ocamlcommon__simplif.ml \
	compilerlibs/ocamlcommon__simplif.mli \
	compilerlibs/unprefixed/simplif.ml \
	compilerlibs/ocamlcommon__strongly_connected_components.ml \
	compilerlibs/ocamlcommon__strongly_connected_components.mli \
	compilerlibs/unprefixed/strongly_connected_components.ml \
	compilerlibs/ocamlcommon__stypes.ml \
	compilerlibs/ocamlcommon__stypes.mli \
	compilerlibs/unprefixed/stypes.ml \
	compilerlibs/ocamlcommon__subst.ml \
	compilerlibs/ocamlcommon__subst.mli \
	compilerlibs/unprefixed/subst.ml \
	compilerlibs/ocamlcommon__switch.ml \
	compilerlibs/ocamlcommon__switch.mli \
	compilerlibs/unprefixed/switch.ml \
	compilerlibs/ocamlcommon__symtable.ml \
	compilerlibs/ocamlcommon__symtable.mli \
	compilerlibs/unprefixed/symtable.ml \
	compilerlibs/ocamlcommon__syntaxerr.ml \
	compilerlibs/ocamlcommon__syntaxerr.mli \
	compilerlibs/unprefixed/syntaxerr.ml \
	compilerlibs/ocamlcommon__targetint.ml \
	compilerlibs/ocamlcommon__targetint.mli \
	compilerlibs/unprefixed/targetint.ml \
	compilerlibs/ocamlcommon__tast_mapper.ml \
	compilerlibs/ocamlcommon__tast_mapper.mli \
	compilerlibs/unprefixed/tast_mapper.ml \
	compilerlibs/ocamlcommon__terminfo.ml \
	compilerlibs/ocamlcommon__terminfo.mli \
	compilerlibs/unprefixed/terminfo.ml \
	compilerlibs/ocamlcommon__translattribute.ml \
	compilerlibs/ocamlcommon__translattribute.mli \
	compilerlibs/unprefixed/translattribute.ml \
	compilerlibs/ocamlcommon__translclass.ml \
	compilerlibs/ocamlcommon__translclass.mli \
	compilerlibs/unprefixed/translclass.ml \
	compilerlibs/ocamlcommon__translcore.ml \
	compilerlibs/ocamlcommon__translcore.mli \
	compilerlibs/unprefixed/translcore.ml \
	compilerlibs/ocamlcommon__translmod.ml \
	compilerlibs/ocamlcommon__translmod.mli \
	compilerlibs/unprefixed/translmod.ml \
	compilerlibs/ocamlcommon__translobj.ml \
	compilerlibs/ocamlcommon__translobj.mli \
	compilerlibs/unprefixed/translobj.ml \
	compilerlibs/ocamlcommon__translprim.ml \
	compilerlibs/ocamlcommon__translprim.mli \
	compilerlibs/unprefixed/translprim.ml \
	compilerlibs/ocamlcommon__typeclass.ml \
	compilerlibs/ocamlcommon__typeclass.mli \
	compilerlibs/unprefixed/typeclass.ml \
	compilerlibs/ocamlcommon__typecore.ml \
	compilerlibs/ocamlcommon__typecore.mli \
	compilerlibs/unprefixed/typecore.ml \
	compilerlibs/ocamlcommon__typedecl.ml \
	compilerlibs/ocamlcommon__typedecl.mli \
	compilerlibs/unprefixed/typedecl.ml \
	compilerlibs/ocamlcommon__typedecl_immediacy.ml \
	compilerlibs/ocamlcommon__typedecl_immediacy.mli \
	compilerlibs/unprefixed/typedecl_immediacy.ml \
	compilerlibs/ocamlcommon__typedecl_properties.ml \
	compilerlibs/ocamlcommon__typedecl_properties.mli \
	compilerlibs/unprefixed/typedecl_properties.ml \
	compilerlibs/ocamlcommon__typedecl_unboxed.ml \
	compilerlibs/ocamlcommon__typedecl_unboxed.mli \
	compilerlibs/unprefixed/typedecl_unboxed.ml \
	compilerlibs/ocamlcommon__typedecl_variance.ml \
	compilerlibs/ocamlcommon__typedecl_variance.mli \
	compilerlibs/unprefixed/typedecl_variance.ml \
	compilerlibs/ocamlcommon__typedtree.ml \
	compilerlibs/ocamlcommon__typedtree.mli \
	compilerlibs/unprefixed/typedtree.ml \
	compilerlibs/ocamlcommon__typedtreeIter.ml \
	compilerlibs/ocamlcommon__typedtreeIter.mli \
	compilerlibs/unprefixed/typedtreeIter.ml \
	compilerlibs/ocamlcommon__typemod.ml \
	compilerlibs/ocamlcommon__typemod.mli \
	compilerlibs/unprefixed/typemod.ml \
	compilerlibs/ocamlcommon__typeopt.ml \
	compilerlibs/ocamlcommon__typeopt.mli \
	compilerlibs/unprefixed/typeopt.ml \
	compilerlibs/ocamlcommon__types.ml \
	compilerlibs/ocamlcommon__types.mli \
	compilerlibs/unprefixed/types.ml \
	compilerlibs/ocamlcommon__typetexp.ml \
	compilerlibs/ocamlcommon__typetexp.mli \
	compilerlibs/unprefixed/typetexp.ml \
	compilerlibs/ocamlcommon__untypeast.ml \
	compilerlibs/ocamlcommon__untypeast.mli \
	compilerlibs/unprefixed/untypeast.ml \
	compilerlibs/ocamlcommon__warnings.ml \
	compilerlibs/ocamlcommon__warnings.mli \
	compilerlibs/unprefixed/warnings.ml
compilerlibs/ocamlbytecomp__bytegen.ml: bytecomp/bytegen.ml
	(echo "# 1 \"bytecomp/bytegen.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__bytegen.mli: bytecomp/bytegen.mli
	(echo "# 1 \"bytecomp/bytegen.mli\""; cat $<) > $@
compilerlibs/unprefixed/bytegen.ml: bytecomp/bytegen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Bytegen instead.\"]" > $@
	echo "include Ocamlbytecomp.Bytegen" >> $@
compilerlibs/ocamlbytecomp__printinstr.ml: bytecomp/printinstr.ml
	(echo "# 1 \"bytecomp/printinstr.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__printinstr.mli: bytecomp/printinstr.mli
	(echo "# 1 \"bytecomp/printinstr.mli\""; cat $<) > $@
compilerlibs/unprefixed/printinstr.ml: bytecomp/printinstr.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Printinstr instead.\"]" > $@
	echo "include Ocamlbytecomp.Printinstr" >> $@
compilerlibs/ocamlbytecomp__emitcode.ml: bytecomp/emitcode.ml
	(echo "# 1 \"bytecomp/emitcode.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__emitcode.mli: bytecomp/emitcode.mli
	(echo "# 1 \"bytecomp/emitcode.mli\""; cat $<) > $@
compilerlibs/unprefixed/emitcode.ml: bytecomp/emitcode.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Emitcode instead.\"]" > $@
	echo "include Ocamlbytecomp.Emitcode" >> $@
compilerlibs/ocamlbytecomp__bytelink.ml: bytecomp/bytelink.ml
	(echo "# 1 \"bytecomp/bytelink.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__bytelink.mli: bytecomp/bytelink.mli
	(echo "# 1 \"bytecomp/bytelink.mli\""; cat $<) > $@
compilerlibs/unprefixed/bytelink.ml: bytecomp/bytelink.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Bytelink instead.\"]" > $@
	echo "include Ocamlbytecomp.Bytelink" >> $@
compilerlibs/ocamlbytecomp__bytelibrarian.ml: bytecomp/bytelibrarian.ml
	(echo "# 1 \"bytecomp/bytelibrarian.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__bytelibrarian.mli: bytecomp/bytelibrarian.mli
	(echo "# 1 \"bytecomp/bytelibrarian.mli\""; cat $<) > $@
compilerlibs/unprefixed/bytelibrarian.ml: bytecomp/bytelibrarian.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Bytelibrarian instead.\"]" > $@
	echo "include Ocamlbytecomp.Bytelibrarian" >> $@
compilerlibs/ocamlbytecomp__bytepackager.ml: bytecomp/bytepackager.ml
	(echo "# 1 \"bytecomp/bytepackager.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__bytepackager.mli: bytecomp/bytepackager.mli
	(echo "# 1 \"bytecomp/bytepackager.mli\""; cat $<) > $@
compilerlibs/unprefixed/bytepackager.ml: bytecomp/bytepackager.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Bytepackager instead.\"]" > $@
	echo "include Ocamlbytecomp.Bytepackager" >> $@
compilerlibs/ocamlbytecomp__errors.ml: driver/errors.ml
	(echo "# 1 \"driver/errors.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__errors.mli: driver/errors.mli
	(echo "# 1 \"driver/errors.mli\""; cat $<) > $@
compilerlibs/unprefixed/errors.ml: driver/errors.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Errors instead.\"]" > $@
	echo "include Ocamlbytecomp.Errors" >> $@
compilerlibs/ocamlbytecomp__compile.ml: driver/compile.ml
	(echo "# 1 \"driver/compile.ml\""; cat $<) > $@
compilerlibs/ocamlbytecomp__compile.mli: driver/compile.mli
	(echo "# 1 \"driver/compile.mli\""; cat $<) > $@
compilerlibs/unprefixed/compile.ml: driver/compile.ml
	echo "[@@@ocaml.deprecated \"Use Ocamlbytecomp.Compile instead.\"]" > $@
	echo "include Ocamlbytecomp.Compile" >> $@
compilerlibs/ocamlbytecomp.ml: Makefile
	echo "module Bytegen       = Ocamlbytecomp__bytegen" > $@
	echo "module Bytelibrarian = Ocamlbytecomp__bytelibrarian" >> $@
	echo "module Bytelink      = Ocamlbytecomp__bytelink" >> $@
	echo "module Bytepackager  = Ocamlbytecomp__bytepackager" >> $@
	echo "module Compile       = Ocamlbytecomp__compile" >> $@
	echo "module Emitcode      = Ocamlbytecomp__emitcode" >> $@
	echo "module Errors        = Ocamlbytecomp__errors" >> $@
	echo "module Printinstr    = Ocamlbytecomp__printinstr" >> $@
beforedepend:: compilerlibs/ocamlbytecomp.ml \
	compilerlibs/ocamlbytecomp__bytegen.ml \
	compilerlibs/ocamlbytecomp__bytegen.mli \
	compilerlibs/unprefixed/bytegen.ml \
	compilerlibs/ocamlbytecomp__bytelibrarian.ml \
	compilerlibs/ocamlbytecomp__bytelibrarian.mli \
	compilerlibs/unprefixed/bytelibrarian.ml \
	compilerlibs/ocamlbytecomp__bytelink.ml \
	compilerlibs/ocamlbytecomp__bytelink.mli \
	compilerlibs/unprefixed/bytelink.ml \
	compilerlibs/ocamlbytecomp__bytepackager.ml \
	compilerlibs/ocamlbytecomp__bytepackager.mli \
	compilerlibs/unprefixed/bytepackager.ml \
	compilerlibs/ocamlbytecomp__compile.ml \
	compilerlibs/ocamlbytecomp__compile.mli \
	compilerlibs/unprefixed/compile.ml \
	compilerlibs/ocamlbytecomp__emitcode.ml \
	compilerlibs/ocamlbytecomp__emitcode.mli \
	compilerlibs/unprefixed/emitcode.ml \
	compilerlibs/ocamlbytecomp__errors.ml \
	compilerlibs/ocamlbytecomp__errors.mli \
	compilerlibs/unprefixed/errors.ml \
	compilerlibs/ocamlbytecomp__printinstr.ml \
	compilerlibs/ocamlbytecomp__printinstr.mli \
	compilerlibs/unprefixed/printinstr.ml
compilerlibs/ocamloptcomp__int_replace_polymorphic_compare.ml: middle_end/int_replace_polymorphic_compare.ml
	(echo "# 1 \"middle_end/int_replace_polymorphic_compare.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__int_replace_polymorphic_compare.mli: middle_end/int_replace_polymorphic_compare.mli
	(echo "# 1 \"middle_end/int_replace_polymorphic_compare.mli\""; cat $<) > $@
compilerlibs/unprefixed/int_replace_polymorphic_compare.ml: middle_end/int_replace_polymorphic_compare.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Int_replace_polymorphic_compare instead.\"]" > $@
	echo "include Ocamloptcomp.Int_replace_polymorphic_compare" >> $@
compilerlibs/ocamloptcomp__debuginfo.ml: middle_end/debuginfo.ml
	(echo "# 1 \"middle_end/debuginfo.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__debuginfo.mli: middle_end/debuginfo.mli
	(echo "# 1 \"middle_end/debuginfo.mli\""; cat $<) > $@
compilerlibs/unprefixed/debuginfo.ml: middle_end/debuginfo.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Debuginfo instead.\"]" > $@
	echo "include Ocamloptcomp.Debuginfo" >> $@
compilerlibs/ocamloptcomp__clambda_primitives.ml: asmcomp/clambda_primitives.ml
	(echo "# 1 \"asmcomp/clambda_primitives.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__clambda_primitives.mli: asmcomp/clambda_primitives.mli
	(echo "# 1 \"asmcomp/clambda_primitives.mli\""; cat $<) > $@
compilerlibs/unprefixed/clambda_primitives.ml: asmcomp/clambda_primitives.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Clambda_primitives instead.\"]" > $@
	echo "include Ocamloptcomp.Clambda_primitives" >> $@
compilerlibs/ocamloptcomp__semantics_of_primitives.ml: asmcomp/semantics_of_primitives.ml
	(echo "# 1 \"asmcomp/semantics_of_primitives.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__semantics_of_primitives.mli: asmcomp/semantics_of_primitives.mli
	(echo "# 1 \"asmcomp/semantics_of_primitives.mli\""; cat $<) > $@
compilerlibs/unprefixed/semantics_of_primitives.ml: asmcomp/semantics_of_primitives.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Semantics_of_primitives instead.\"]" > $@
	echo "include Ocamloptcomp.Semantics_of_primitives" >> $@
compilerlibs/ocamloptcomp__convert_primitives.ml: asmcomp/convert_primitives.ml
	(echo "# 1 \"asmcomp/convert_primitives.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__convert_primitives.mli: asmcomp/convert_primitives.mli
	(echo "# 1 \"asmcomp/convert_primitives.mli\""; cat $<) > $@
compilerlibs/unprefixed/convert_primitives.ml: asmcomp/convert_primitives.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Convert_primitives instead.\"]" > $@
	echo "include Ocamloptcomp.Convert_primitives" >> $@
compilerlibs/ocamloptcomp__printclambda_primitives.ml: asmcomp/printclambda_primitives.ml
	(echo "# 1 \"asmcomp/printclambda_primitives.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__printclambda_primitives.mli: asmcomp/printclambda_primitives.mli
	(echo "# 1 \"asmcomp/printclambda_primitives.mli\""; cat $<) > $@
compilerlibs/unprefixed/printclambda_primitives.ml: asmcomp/printclambda_primitives.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Printclambda_primitives instead.\"]" > $@
	echo "include Ocamloptcomp.Printclambda_primitives" >> $@
compilerlibs/ocamloptcomp__tag.ml: middle_end/base_types/tag.ml
	(echo "# 1 \"middle_end/base_types/tag.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__tag.mli: middle_end/base_types/tag.mli
	(echo "# 1 \"middle_end/base_types/tag.mli\""; cat $<) > $@
compilerlibs/unprefixed/tag.ml: middle_end/base_types/tag.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Tag instead.\"]" > $@
	echo "include Ocamloptcomp.Tag" >> $@
compilerlibs/ocamloptcomp__linkage_name.ml: middle_end/base_types/linkage_name.ml
	(echo "# 1 \"middle_end/base_types/linkage_name.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__linkage_name.mli: middle_end/base_types/linkage_name.mli
	(echo "# 1 \"middle_end/base_types/linkage_name.mli\""; cat $<) > $@
compilerlibs/unprefixed/linkage_name.ml: middle_end/base_types/linkage_name.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Linkage_name instead.\"]" > $@
	echo "include Ocamloptcomp.Linkage_name" >> $@
compilerlibs/ocamloptcomp__compilation_unit.ml: middle_end/base_types/compilation_unit.ml
	(echo "# 1 \"middle_end/base_types/compilation_unit.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__compilation_unit.mli: middle_end/base_types/compilation_unit.mli
	(echo "# 1 \"middle_end/base_types/compilation_unit.mli\""; cat $<) > $@
compilerlibs/unprefixed/compilation_unit.ml: middle_end/base_types/compilation_unit.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Compilation_unit instead.\"]" > $@
	echo "include Ocamloptcomp.Compilation_unit" >> $@
compilerlibs/ocamloptcomp__internal_variable_names.ml: middle_end/internal_variable_names.ml
	(echo "# 1 \"middle_end/internal_variable_names.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__internal_variable_names.mli: middle_end/internal_variable_names.mli
	(echo "# 1 \"middle_end/internal_variable_names.mli\""; cat $<) > $@
compilerlibs/unprefixed/internal_variable_names.ml: middle_end/internal_variable_names.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Internal_variable_names instead.\"]" > $@
	echo "include Ocamloptcomp.Internal_variable_names" >> $@
compilerlibs/ocamloptcomp__variable.ml: middle_end/base_types/variable.ml
	(echo "# 1 \"middle_end/base_types/variable.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__variable.mli: middle_end/base_types/variable.mli
	(echo "# 1 \"middle_end/base_types/variable.mli\""; cat $<) > $@
compilerlibs/unprefixed/variable.ml: middle_end/base_types/variable.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Variable instead.\"]" > $@
	echo "include Ocamloptcomp.Variable" >> $@
compilerlibs/ocamloptcomp__mutable_variable.ml: middle_end/base_types/mutable_variable.ml
	(echo "# 1 \"middle_end/base_types/mutable_variable.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__mutable_variable.mli: middle_end/base_types/mutable_variable.mli
	(echo "# 1 \"middle_end/base_types/mutable_variable.mli\""; cat $<) > $@
compilerlibs/unprefixed/mutable_variable.ml: middle_end/base_types/mutable_variable.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Mutable_variable instead.\"]" > $@
	echo "include Ocamloptcomp.Mutable_variable" >> $@
compilerlibs/ocamloptcomp__id_types.ml: middle_end/base_types/id_types.ml
	(echo "# 1 \"middle_end/base_types/id_types.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__id_types.mli: middle_end/base_types/id_types.mli
	(echo "# 1 \"middle_end/base_types/id_types.mli\""; cat $<) > $@
compilerlibs/unprefixed/id_types.ml: middle_end/base_types/id_types.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Id_types instead.\"]" > $@
	echo "include Ocamloptcomp.Id_types" >> $@
compilerlibs/ocamloptcomp__set_of_closures_id.ml: middle_end/base_types/set_of_closures_id.ml
	(echo "# 1 \"middle_end/base_types/set_of_closures_id.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__set_of_closures_id.mli: middle_end/base_types/set_of_closures_id.mli
	(echo "# 1 \"middle_end/base_types/set_of_closures_id.mli\""; cat $<) > $@
compilerlibs/unprefixed/set_of_closures_id.ml: middle_end/base_types/set_of_closures_id.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Set_of_closures_id instead.\"]" > $@
	echo "include Ocamloptcomp.Set_of_closures_id" >> $@
compilerlibs/ocamloptcomp__set_of_closures_origin.ml: middle_end/base_types/set_of_closures_origin.ml
	(echo "# 1 \"middle_end/base_types/set_of_closures_origin.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__set_of_closures_origin.mli: middle_end/base_types/set_of_closures_origin.mli
	(echo "# 1 \"middle_end/base_types/set_of_closures_origin.mli\""; cat $<) > $@
compilerlibs/unprefixed/set_of_closures_origin.ml: middle_end/base_types/set_of_closures_origin.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Set_of_closures_origin instead.\"]" > $@
	echo "include Ocamloptcomp.Set_of_closures_origin" >> $@
compilerlibs/ocamloptcomp__closure_element.ml: middle_end/base_types/closure_element.ml
	(echo "# 1 \"middle_end/base_types/closure_element.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_element.mli: middle_end/base_types/closure_element.mli
	(echo "# 1 \"middle_end/base_types/closure_element.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_element.ml: middle_end/base_types/closure_element.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_element instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_element" >> $@
compilerlibs/ocamloptcomp__closure_id.ml: middle_end/base_types/closure_id.ml
	(echo "# 1 \"middle_end/base_types/closure_id.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_id.mli: middle_end/base_types/closure_id.mli
	(echo "# 1 \"middle_end/base_types/closure_id.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_id.ml: middle_end/base_types/closure_id.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_id instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_id" >> $@
compilerlibs/ocamloptcomp__closure_origin.ml: middle_end/base_types/closure_origin.ml
	(echo "# 1 \"middle_end/base_types/closure_origin.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_origin.mli: middle_end/base_types/closure_origin.mli
	(echo "# 1 \"middle_end/base_types/closure_origin.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_origin.ml: middle_end/base_types/closure_origin.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_origin instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_origin" >> $@
compilerlibs/ocamloptcomp__var_within_closure.ml: middle_end/base_types/var_within_closure.ml
	(echo "# 1 \"middle_end/base_types/var_within_closure.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__var_within_closure.mli: middle_end/base_types/var_within_closure.mli
	(echo "# 1 \"middle_end/base_types/var_within_closure.mli\""; cat $<) > $@
compilerlibs/unprefixed/var_within_closure.ml: middle_end/base_types/var_within_closure.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Var_within_closure instead.\"]" > $@
	echo "include Ocamloptcomp.Var_within_closure" >> $@
compilerlibs/ocamloptcomp__static_exception.ml: middle_end/base_types/static_exception.ml
	(echo "# 1 \"middle_end/base_types/static_exception.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__static_exception.mli: middle_end/base_types/static_exception.mli
	(echo "# 1 \"middle_end/base_types/static_exception.mli\""; cat $<) > $@
compilerlibs/unprefixed/static_exception.ml: middle_end/base_types/static_exception.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Static_exception instead.\"]" > $@
	echo "include Ocamloptcomp.Static_exception" >> $@
compilerlibs/ocamloptcomp__export_id.ml: middle_end/base_types/export_id.ml
	(echo "# 1 \"middle_end/base_types/export_id.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__export_id.mli: middle_end/base_types/export_id.mli
	(echo "# 1 \"middle_end/base_types/export_id.mli\""; cat $<) > $@
compilerlibs/unprefixed/export_id.ml: middle_end/base_types/export_id.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Export_id instead.\"]" > $@
	echo "include Ocamloptcomp.Export_id" >> $@
compilerlibs/ocamloptcomp__symbol.ml: middle_end/base_types/symbol.ml
	(echo "# 1 \"middle_end/base_types/symbol.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__symbol.mli: middle_end/base_types/symbol.mli
	(echo "# 1 \"middle_end/base_types/symbol.mli\""; cat $<) > $@
compilerlibs/unprefixed/symbol.ml: middle_end/base_types/symbol.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Symbol instead.\"]" > $@
	echo "include Ocamloptcomp.Symbol" >> $@
compilerlibs/ocamloptcomp__pass_wrapper.ml: middle_end/pass_wrapper.ml
	(echo "# 1 \"middle_end/pass_wrapper.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__pass_wrapper.mli: middle_end/pass_wrapper.mli
	(echo "# 1 \"middle_end/pass_wrapper.mli\""; cat $<) > $@
compilerlibs/unprefixed/pass_wrapper.ml: middle_end/pass_wrapper.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Pass_wrapper instead.\"]" > $@
	echo "include Ocamloptcomp.Pass_wrapper" >> $@
compilerlibs/ocamloptcomp__allocated_const.ml: middle_end/allocated_const.ml
	(echo "# 1 \"middle_end/allocated_const.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__allocated_const.mli: middle_end/allocated_const.mli
	(echo "# 1 \"middle_end/allocated_const.mli\""; cat $<) > $@
compilerlibs/unprefixed/allocated_const.ml: middle_end/allocated_const.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Allocated_const instead.\"]" > $@
	echo "include Ocamloptcomp.Allocated_const" >> $@
compilerlibs/ocamloptcomp__parameter.ml: middle_end/parameter.ml
	(echo "# 1 \"middle_end/parameter.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__parameter.mli: middle_end/parameter.mli
	(echo "# 1 \"middle_end/parameter.mli\""; cat $<) > $@
compilerlibs/unprefixed/parameter.ml: middle_end/parameter.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Parameter instead.\"]" > $@
	echo "include Ocamloptcomp.Parameter" >> $@
compilerlibs/ocamloptcomp__projection.ml: middle_end/projection.ml
	(echo "# 1 \"middle_end/projection.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__projection.mli: middle_end/projection.mli
	(echo "# 1 \"middle_end/projection.mli\""; cat $<) > $@
compilerlibs/unprefixed/projection.ml: middle_end/projection.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Projection instead.\"]" > $@
	echo "include Ocamloptcomp.Projection" >> $@
compilerlibs/ocamloptcomp__flambda.ml: middle_end/flambda.ml
	(echo "# 1 \"middle_end/flambda.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__flambda.mli: middle_end/flambda.mli
	(echo "# 1 \"middle_end/flambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/flambda.ml: middle_end/flambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Flambda instead.\"]" > $@
	echo "include Ocamloptcomp.Flambda" >> $@
compilerlibs/ocamloptcomp__flambda_iterators.ml: middle_end/flambda_iterators.ml
	(echo "# 1 \"middle_end/flambda_iterators.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__flambda_iterators.mli: middle_end/flambda_iterators.mli
	(echo "# 1 \"middle_end/flambda_iterators.mli\""; cat $<) > $@
compilerlibs/unprefixed/flambda_iterators.ml: middle_end/flambda_iterators.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Flambda_iterators instead.\"]" > $@
	echo "include Ocamloptcomp.Flambda_iterators" >> $@
compilerlibs/ocamloptcomp__flambda_utils.ml: middle_end/flambda_utils.ml
	(echo "# 1 \"middle_end/flambda_utils.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__flambda_utils.mli: middle_end/flambda_utils.mli
	(echo "# 1 \"middle_end/flambda_utils.mli\""; cat $<) > $@
compilerlibs/unprefixed/flambda_utils.ml: middle_end/flambda_utils.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Flambda_utils instead.\"]" > $@
	echo "include Ocamloptcomp.Flambda_utils" >> $@
compilerlibs/ocamloptcomp__inlining_cost.ml: middle_end/inlining_cost.ml
	(echo "# 1 \"middle_end/inlining_cost.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inlining_cost.mli: middle_end/inlining_cost.mli
	(echo "# 1 \"middle_end/inlining_cost.mli\""; cat $<) > $@
compilerlibs/unprefixed/inlining_cost.ml: middle_end/inlining_cost.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inlining_cost instead.\"]" > $@
	echo "include Ocamloptcomp.Inlining_cost" >> $@
compilerlibs/ocamloptcomp__effect_analysis.ml: middle_end/effect_analysis.ml
	(echo "# 1 \"middle_end/effect_analysis.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__effect_analysis.mli: middle_end/effect_analysis.mli
	(echo "# 1 \"middle_end/effect_analysis.mli\""; cat $<) > $@
compilerlibs/unprefixed/effect_analysis.ml: middle_end/effect_analysis.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Effect_analysis instead.\"]" > $@
	echo "include Ocamloptcomp.Effect_analysis" >> $@
compilerlibs/ocamloptcomp__freshening.ml: middle_end/freshening.ml
	(echo "# 1 \"middle_end/freshening.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__freshening.mli: middle_end/freshening.mli
	(echo "# 1 \"middle_end/freshening.mli\""; cat $<) > $@
compilerlibs/unprefixed/freshening.ml: middle_end/freshening.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Freshening instead.\"]" > $@
	echo "include Ocamloptcomp.Freshening" >> $@
compilerlibs/ocamloptcomp__simple_value_approx.ml: middle_end/simple_value_approx.ml
	(echo "# 1 \"middle_end/simple_value_approx.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__simple_value_approx.mli: middle_end/simple_value_approx.mli
	(echo "# 1 \"middle_end/simple_value_approx.mli\""; cat $<) > $@
compilerlibs/unprefixed/simple_value_approx.ml: middle_end/simple_value_approx.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Simple_value_approx instead.\"]" > $@
	echo "include Ocamloptcomp.Simple_value_approx" >> $@
compilerlibs/ocamloptcomp__lift_code.ml: middle_end/lift_code.ml
	(echo "# 1 \"middle_end/lift_code.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__lift_code.mli: middle_end/lift_code.mli
	(echo "# 1 \"middle_end/lift_code.mli\""; cat $<) > $@
compilerlibs/unprefixed/lift_code.ml: middle_end/lift_code.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Lift_code instead.\"]" > $@
	echo "include Ocamloptcomp.Lift_code" >> $@
compilerlibs/ocamloptcomp__backend_intf.ml: middle_end/backend_intf.ml
	(echo "# 1 \"middle_end/backend_intf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__backend_intf.mli: middle_end/backend_intf.mli
	(echo "# 1 \"middle_end/backend_intf.mli\""; cat $<) > $@
compilerlibs/unprefixed/backend_intf.ml: middle_end/backend_intf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Backend_intf instead.\"]" > $@
	echo "include Ocamloptcomp.Backend_intf" >> $@
compilerlibs/ocamloptcomp__closure_conversion_aux.ml: middle_end/closure_conversion_aux.ml
	(echo "# 1 \"middle_end/closure_conversion_aux.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_conversion_aux.mli: middle_end/closure_conversion_aux.mli
	(echo "# 1 \"middle_end/closure_conversion_aux.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_conversion_aux.ml: middle_end/closure_conversion_aux.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_conversion_aux instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_conversion_aux" >> $@
compilerlibs/ocamloptcomp__closure_conversion.ml: middle_end/closure_conversion.ml
	(echo "# 1 \"middle_end/closure_conversion.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_conversion.mli: middle_end/closure_conversion.mli
	(echo "# 1 \"middle_end/closure_conversion.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_conversion.ml: middle_end/closure_conversion.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_conversion instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_conversion" >> $@
compilerlibs/ocamloptcomp__initialize_symbol_to_let_symbol.ml: middle_end/initialize_symbol_to_let_symbol.ml
	(echo "# 1 \"middle_end/initialize_symbol_to_let_symbol.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__initialize_symbol_to_let_symbol.mli: middle_end/initialize_symbol_to_let_symbol.mli
	(echo "# 1 \"middle_end/initialize_symbol_to_let_symbol.mli\""; cat $<) > $@
compilerlibs/unprefixed/initialize_symbol_to_let_symbol.ml: middle_end/initialize_symbol_to_let_symbol.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Initialize_symbol_to_let_symbol instead.\"]" > $@
	echo "include Ocamloptcomp.Initialize_symbol_to_let_symbol" >> $@
compilerlibs/ocamloptcomp__lift_let_to_initialize_symbol.ml: middle_end/lift_let_to_initialize_symbol.ml
	(echo "# 1 \"middle_end/lift_let_to_initialize_symbol.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__lift_let_to_initialize_symbol.mli: middle_end/lift_let_to_initialize_symbol.mli
	(echo "# 1 \"middle_end/lift_let_to_initialize_symbol.mli\""; cat $<) > $@
compilerlibs/unprefixed/lift_let_to_initialize_symbol.ml: middle_end/lift_let_to_initialize_symbol.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Lift_let_to_initialize_symbol instead.\"]" > $@
	echo "include Ocamloptcomp.Lift_let_to_initialize_symbol" >> $@
compilerlibs/ocamloptcomp__find_recursive_functions.ml: middle_end/find_recursive_functions.ml
	(echo "# 1 \"middle_end/find_recursive_functions.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__find_recursive_functions.mli: middle_end/find_recursive_functions.mli
	(echo "# 1 \"middle_end/find_recursive_functions.mli\""; cat $<) > $@
compilerlibs/unprefixed/find_recursive_functions.ml: middle_end/find_recursive_functions.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Find_recursive_functions instead.\"]" > $@
	echo "include Ocamloptcomp.Find_recursive_functions" >> $@
compilerlibs/ocamloptcomp__invariant_params.ml: middle_end/invariant_params.ml
	(echo "# 1 \"middle_end/invariant_params.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__invariant_params.mli: middle_end/invariant_params.mli
	(echo "# 1 \"middle_end/invariant_params.mli\""; cat $<) > $@
compilerlibs/unprefixed/invariant_params.ml: middle_end/invariant_params.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Invariant_params instead.\"]" > $@
	echo "include Ocamloptcomp.Invariant_params" >> $@
compilerlibs/ocamloptcomp__inconstant_idents.ml: middle_end/inconstant_idents.ml
	(echo "# 1 \"middle_end/inconstant_idents.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inconstant_idents.mli: middle_end/inconstant_idents.mli
	(echo "# 1 \"middle_end/inconstant_idents.mli\""; cat $<) > $@
compilerlibs/unprefixed/inconstant_idents.ml: middle_end/inconstant_idents.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inconstant_idents instead.\"]" > $@
	echo "include Ocamloptcomp.Inconstant_idents" >> $@
compilerlibs/ocamloptcomp__alias_analysis.ml: middle_end/alias_analysis.ml
	(echo "# 1 \"middle_end/alias_analysis.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__alias_analysis.mli: middle_end/alias_analysis.mli
	(echo "# 1 \"middle_end/alias_analysis.mli\""; cat $<) > $@
compilerlibs/unprefixed/alias_analysis.ml: middle_end/alias_analysis.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Alias_analysis instead.\"]" > $@
	echo "include Ocamloptcomp.Alias_analysis" >> $@
compilerlibs/ocamloptcomp__lift_constants.ml: middle_end/lift_constants.ml
	(echo "# 1 \"middle_end/lift_constants.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__lift_constants.mli: middle_end/lift_constants.mli
	(echo "# 1 \"middle_end/lift_constants.mli\""; cat $<) > $@
compilerlibs/unprefixed/lift_constants.ml: middle_end/lift_constants.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Lift_constants instead.\"]" > $@
	echo "include Ocamloptcomp.Lift_constants" >> $@
compilerlibs/ocamloptcomp__share_constants.ml: middle_end/share_constants.ml
	(echo "# 1 \"middle_end/share_constants.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__share_constants.mli: middle_end/share_constants.mli
	(echo "# 1 \"middle_end/share_constants.mli\""; cat $<) > $@
compilerlibs/unprefixed/share_constants.ml: middle_end/share_constants.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Share_constants instead.\"]" > $@
	echo "include Ocamloptcomp.Share_constants" >> $@
compilerlibs/ocamloptcomp__simplify_common.ml: middle_end/simplify_common.ml
	(echo "# 1 \"middle_end/simplify_common.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__simplify_common.mli: middle_end/simplify_common.mli
	(echo "# 1 \"middle_end/simplify_common.mli\""; cat $<) > $@
compilerlibs/unprefixed/simplify_common.ml: middle_end/simplify_common.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Simplify_common instead.\"]" > $@
	echo "include Ocamloptcomp.Simplify_common" >> $@
compilerlibs/ocamloptcomp__remove_unused_arguments.ml: middle_end/remove_unused_arguments.ml
	(echo "# 1 \"middle_end/remove_unused_arguments.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__remove_unused_arguments.mli: middle_end/remove_unused_arguments.mli
	(echo "# 1 \"middle_end/remove_unused_arguments.mli\""; cat $<) > $@
compilerlibs/unprefixed/remove_unused_arguments.ml: middle_end/remove_unused_arguments.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Remove_unused_arguments instead.\"]" > $@
	echo "include Ocamloptcomp.Remove_unused_arguments" >> $@
compilerlibs/ocamloptcomp__remove_unused_closure_vars.ml: middle_end/remove_unused_closure_vars.ml
	(echo "# 1 \"middle_end/remove_unused_closure_vars.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__remove_unused_closure_vars.mli: middle_end/remove_unused_closure_vars.mli
	(echo "# 1 \"middle_end/remove_unused_closure_vars.mli\""; cat $<) > $@
compilerlibs/unprefixed/remove_unused_closure_vars.ml: middle_end/remove_unused_closure_vars.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Remove_unused_closure_vars instead.\"]" > $@
	echo "include Ocamloptcomp.Remove_unused_closure_vars" >> $@
compilerlibs/ocamloptcomp__remove_unused_program_constructs.ml: middle_end/remove_unused_program_constructs.ml
	(echo "# 1 \"middle_end/remove_unused_program_constructs.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__remove_unused_program_constructs.mli: middle_end/remove_unused_program_constructs.mli
	(echo "# 1 \"middle_end/remove_unused_program_constructs.mli\""; cat $<) > $@
compilerlibs/unprefixed/remove_unused_program_constructs.ml: middle_end/remove_unused_program_constructs.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Remove_unused_program_constructs instead.\"]" > $@
	echo "include Ocamloptcomp.Remove_unused_program_constructs" >> $@
compilerlibs/ocamloptcomp__simplify_boxed_integer_ops_intf.ml: middle_end/simplify_boxed_integer_ops_intf.ml
	(echo "# 1 \"middle_end/simplify_boxed_integer_ops_intf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__simplify_boxed_integer_ops_intf.mli: middle_end/simplify_boxed_integer_ops_intf.mli
	(echo "# 1 \"middle_end/simplify_boxed_integer_ops_intf.mli\""; cat $<) > $@
compilerlibs/unprefixed/simplify_boxed_integer_ops_intf.ml: middle_end/simplify_boxed_integer_ops_intf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Simplify_boxed_integer_ops_intf instead.\"]" > $@
	echo "include Ocamloptcomp.Simplify_boxed_integer_ops_intf" >> $@
compilerlibs/ocamloptcomp__simplify_boxed_integer_ops.ml: middle_end/simplify_boxed_integer_ops.ml
	(echo "# 1 \"middle_end/simplify_boxed_integer_ops.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__simplify_boxed_integer_ops.mli: middle_end/simplify_boxed_integer_ops.mli
	(echo "# 1 \"middle_end/simplify_boxed_integer_ops.mli\""; cat $<) > $@
compilerlibs/unprefixed/simplify_boxed_integer_ops.ml: middle_end/simplify_boxed_integer_ops.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Simplify_boxed_integer_ops instead.\"]" > $@
	echo "include Ocamloptcomp.Simplify_boxed_integer_ops" >> $@
compilerlibs/ocamloptcomp__simplify_primitives.ml: middle_end/simplify_primitives.ml
	(echo "# 1 \"middle_end/simplify_primitives.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__simplify_primitives.mli: middle_end/simplify_primitives.mli
	(echo "# 1 \"middle_end/simplify_primitives.mli\""; cat $<) > $@
compilerlibs/unprefixed/simplify_primitives.ml: middle_end/simplify_primitives.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Simplify_primitives instead.\"]" > $@
	echo "include Ocamloptcomp.Simplify_primitives" >> $@
compilerlibs/ocamloptcomp__inlining_stats_types.ml: middle_end/inlining_stats_types.ml
	(echo "# 1 \"middle_end/inlining_stats_types.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inlining_stats_types.mli: middle_end/inlining_stats_types.mli
	(echo "# 1 \"middle_end/inlining_stats_types.mli\""; cat $<) > $@
compilerlibs/unprefixed/inlining_stats_types.ml: middle_end/inlining_stats_types.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inlining_stats_types instead.\"]" > $@
	echo "include Ocamloptcomp.Inlining_stats_types" >> $@
compilerlibs/ocamloptcomp__inlining_stats.ml: middle_end/inlining_stats.ml
	(echo "# 1 \"middle_end/inlining_stats.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inlining_stats.mli: middle_end/inlining_stats.mli
	(echo "# 1 \"middle_end/inlining_stats.mli\""; cat $<) > $@
compilerlibs/unprefixed/inlining_stats.ml: middle_end/inlining_stats.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inlining_stats instead.\"]" > $@
	echo "include Ocamloptcomp.Inlining_stats" >> $@
compilerlibs/ocamloptcomp__inline_and_simplify_aux.ml: middle_end/inline_and_simplify_aux.ml
	(echo "# 1 \"middle_end/inline_and_simplify_aux.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inline_and_simplify_aux.mli: middle_end/inline_and_simplify_aux.mli
	(echo "# 1 \"middle_end/inline_and_simplify_aux.mli\""; cat $<) > $@
compilerlibs/unprefixed/inline_and_simplify_aux.ml: middle_end/inline_and_simplify_aux.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inline_and_simplify_aux instead.\"]" > $@
	echo "include Ocamloptcomp.Inline_and_simplify_aux" >> $@
compilerlibs/ocamloptcomp__remove_free_vars_equal_to_args.ml: middle_end/remove_free_vars_equal_to_args.ml
	(echo "# 1 \"middle_end/remove_free_vars_equal_to_args.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__remove_free_vars_equal_to_args.mli: middle_end/remove_free_vars_equal_to_args.mli
	(echo "# 1 \"middle_end/remove_free_vars_equal_to_args.mli\""; cat $<) > $@
compilerlibs/unprefixed/remove_free_vars_equal_to_args.ml: middle_end/remove_free_vars_equal_to_args.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Remove_free_vars_equal_to_args instead.\"]" > $@
	echo "include Ocamloptcomp.Remove_free_vars_equal_to_args" >> $@
compilerlibs/ocamloptcomp__extract_projections.ml: middle_end/extract_projections.ml
	(echo "# 1 \"middle_end/extract_projections.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__extract_projections.mli: middle_end/extract_projections.mli
	(echo "# 1 \"middle_end/extract_projections.mli\""; cat $<) > $@
compilerlibs/unprefixed/extract_projections.ml: middle_end/extract_projections.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Extract_projections instead.\"]" > $@
	echo "include Ocamloptcomp.Extract_projections" >> $@
compilerlibs/ocamloptcomp__augment_specialised_args.ml: middle_end/augment_specialised_args.ml
	(echo "# 1 \"middle_end/augment_specialised_args.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__augment_specialised_args.mli: middle_end/augment_specialised_args.mli
	(echo "# 1 \"middle_end/augment_specialised_args.mli\""; cat $<) > $@
compilerlibs/unprefixed/augment_specialised_args.ml: middle_end/augment_specialised_args.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Augment_specialised_args instead.\"]" > $@
	echo "include Ocamloptcomp.Augment_specialised_args" >> $@
compilerlibs/ocamloptcomp__unbox_free_vars_of_closures.ml: middle_end/unbox_free_vars_of_closures.ml
	(echo "# 1 \"middle_end/unbox_free_vars_of_closures.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__unbox_free_vars_of_closures.mli: middle_end/unbox_free_vars_of_closures.mli
	(echo "# 1 \"middle_end/unbox_free_vars_of_closures.mli\""; cat $<) > $@
compilerlibs/unprefixed/unbox_free_vars_of_closures.ml: middle_end/unbox_free_vars_of_closures.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Unbox_free_vars_of_closures instead.\"]" > $@
	echo "include Ocamloptcomp.Unbox_free_vars_of_closures" >> $@
compilerlibs/ocamloptcomp__unbox_specialised_args.ml: middle_end/unbox_specialised_args.ml
	(echo "# 1 \"middle_end/unbox_specialised_args.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__unbox_specialised_args.mli: middle_end/unbox_specialised_args.mli
	(echo "# 1 \"middle_end/unbox_specialised_args.mli\""; cat $<) > $@
compilerlibs/unprefixed/unbox_specialised_args.ml: middle_end/unbox_specialised_args.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Unbox_specialised_args instead.\"]" > $@
	echo "include Ocamloptcomp.Unbox_specialised_args" >> $@
compilerlibs/ocamloptcomp__unbox_closures.ml: middle_end/unbox_closures.ml
	(echo "# 1 \"middle_end/unbox_closures.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__unbox_closures.mli: middle_end/unbox_closures.mli
	(echo "# 1 \"middle_end/unbox_closures.mli\""; cat $<) > $@
compilerlibs/unprefixed/unbox_closures.ml: middle_end/unbox_closures.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Unbox_closures instead.\"]" > $@
	echo "include Ocamloptcomp.Unbox_closures" >> $@
compilerlibs/ocamloptcomp__inlining_transforms.ml: middle_end/inlining_transforms.ml
	(echo "# 1 \"middle_end/inlining_transforms.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inlining_transforms.mli: middle_end/inlining_transforms.mli
	(echo "# 1 \"middle_end/inlining_transforms.mli\""; cat $<) > $@
compilerlibs/unprefixed/inlining_transforms.ml: middle_end/inlining_transforms.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inlining_transforms instead.\"]" > $@
	echo "include Ocamloptcomp.Inlining_transforms" >> $@
compilerlibs/ocamloptcomp__inlining_decision.ml: middle_end/inlining_decision.ml
	(echo "# 1 \"middle_end/inlining_decision.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inlining_decision.mli: middle_end/inlining_decision.mli
	(echo "# 1 \"middle_end/inlining_decision.mli\""; cat $<) > $@
compilerlibs/unprefixed/inlining_decision.ml: middle_end/inlining_decision.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inlining_decision instead.\"]" > $@
	echo "include Ocamloptcomp.Inlining_decision" >> $@
compilerlibs/ocamloptcomp__inline_and_simplify.ml: middle_end/inline_and_simplify.ml
	(echo "# 1 \"middle_end/inline_and_simplify.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__inline_and_simplify.mli: middle_end/inline_and_simplify.mli
	(echo "# 1 \"middle_end/inline_and_simplify.mli\""; cat $<) > $@
compilerlibs/unprefixed/inline_and_simplify.ml: middle_end/inline_and_simplify.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Inline_and_simplify instead.\"]" > $@
	echo "include Ocamloptcomp.Inline_and_simplify" >> $@
compilerlibs/ocamloptcomp__ref_to_variables.ml: middle_end/ref_to_variables.ml
	(echo "# 1 \"middle_end/ref_to_variables.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__ref_to_variables.mli: middle_end/ref_to_variables.mli
	(echo "# 1 \"middle_end/ref_to_variables.mli\""; cat $<) > $@
compilerlibs/unprefixed/ref_to_variables.ml: middle_end/ref_to_variables.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Ref_to_variables instead.\"]" > $@
	echo "include Ocamloptcomp.Ref_to_variables" >> $@
compilerlibs/ocamloptcomp__flambda_invariants.ml: middle_end/flambda_invariants.ml
	(echo "# 1 \"middle_end/flambda_invariants.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__flambda_invariants.mli: middle_end/flambda_invariants.mli
	(echo "# 1 \"middle_end/flambda_invariants.mli\""; cat $<) > $@
compilerlibs/unprefixed/flambda_invariants.ml: middle_end/flambda_invariants.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Flambda_invariants instead.\"]" > $@
	echo "include Ocamloptcomp.Flambda_invariants" >> $@
compilerlibs/ocamloptcomp__middle_end.ml: middle_end/middle_end.ml
	(echo "# 1 \"middle_end/middle_end.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__middle_end.mli: middle_end/middle_end.mli
	(echo "# 1 \"middle_end/middle_end.mli\""; cat $<) > $@
compilerlibs/unprefixed/middle_end.ml: middle_end/middle_end.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Middle_end instead.\"]" > $@
	echo "include Ocamloptcomp.Middle_end" >> $@
compilerlibs/ocamloptcomp__x86_proc.ml: asmcomp/x86_proc.ml
	(echo "# 1 \"asmcomp/x86_proc.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__x86_proc.mli: asmcomp/x86_proc.mli
	(echo "# 1 \"asmcomp/x86_proc.mli\""; cat $<) > $@
compilerlibs/unprefixed/x86_proc.ml: asmcomp/x86_proc.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.X86_proc instead.\"]" > $@
	echo "include Ocamloptcomp.X86_proc" >> $@
compilerlibs/ocamloptcomp__x86_dsl.ml: asmcomp/x86_dsl.ml
	(echo "# 1 \"asmcomp/x86_dsl.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__x86_dsl.mli: asmcomp/x86_dsl.mli
	(echo "# 1 \"asmcomp/x86_dsl.mli\""; cat $<) > $@
compilerlibs/unprefixed/x86_dsl.ml: asmcomp/x86_dsl.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.X86_dsl instead.\"]" > $@
	echo "include Ocamloptcomp.X86_dsl" >> $@
compilerlibs/ocamloptcomp__x86_gas.ml: asmcomp/x86_gas.ml
	(echo "# 1 \"asmcomp/x86_gas.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__x86_gas.mli: asmcomp/x86_gas.mli
	(echo "# 1 \"asmcomp/x86_gas.mli\""; cat $<) > $@
compilerlibs/unprefixed/x86_gas.ml: asmcomp/x86_gas.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.X86_gas instead.\"]" > $@
	echo "include Ocamloptcomp.X86_gas" >> $@
compilerlibs/ocamloptcomp__x86_masm.ml: asmcomp/x86_masm.ml
	(echo "# 1 \"asmcomp/x86_masm.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__x86_masm.mli: asmcomp/x86_masm.mli
	(echo "# 1 \"asmcomp/x86_masm.mli\""; cat $<) > $@
compilerlibs/unprefixed/x86_masm.ml: asmcomp/x86_masm.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.X86_masm instead.\"]" > $@
	echo "include Ocamloptcomp.X86_masm" >> $@
compilerlibs/ocamloptcomp__arch.ml: asmcomp/arch.ml
	(echo "# 1 \"asmcomp/arch.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__arch.mli: asmcomp/arch.mli
	(echo "# 1 \"asmcomp/arch.mli\""; cat $<) > $@
compilerlibs/unprefixed/arch.ml: asmcomp/arch.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Arch instead.\"]" > $@
	echo "include Ocamloptcomp.Arch" >> $@
compilerlibs/ocamloptcomp__backend_var.ml: asmcomp/backend_var.ml
	(echo "# 1 \"asmcomp/backend_var.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__backend_var.mli: asmcomp/backend_var.mli
	(echo "# 1 \"asmcomp/backend_var.mli\""; cat $<) > $@
compilerlibs/unprefixed/backend_var.ml: asmcomp/backend_var.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Backend_var instead.\"]" > $@
	echo "include Ocamloptcomp.Backend_var" >> $@
compilerlibs/ocamloptcomp__cmm.ml: asmcomp/cmm.ml
	(echo "# 1 \"asmcomp/cmm.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__cmm.mli: asmcomp/cmm.mli
	(echo "# 1 \"asmcomp/cmm.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmm.ml: asmcomp/cmm.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Cmm instead.\"]" > $@
	echo "include Ocamloptcomp.Cmm" >> $@
compilerlibs/ocamloptcomp__printcmm.ml: asmcomp/printcmm.ml
	(echo "# 1 \"asmcomp/printcmm.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__printcmm.mli: asmcomp/printcmm.mli
	(echo "# 1 \"asmcomp/printcmm.mli\""; cat $<) > $@
compilerlibs/unprefixed/printcmm.ml: asmcomp/printcmm.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Printcmm instead.\"]" > $@
	echo "include Ocamloptcomp.Printcmm" >> $@
compilerlibs/ocamloptcomp__reg.ml: asmcomp/reg.ml
	(echo "# 1 \"asmcomp/reg.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__reg.mli: asmcomp/reg.mli
	(echo "# 1 \"asmcomp/reg.mli\""; cat $<) > $@
compilerlibs/unprefixed/reg.ml: asmcomp/reg.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Reg instead.\"]" > $@
	echo "include Ocamloptcomp.Reg" >> $@
compilerlibs/ocamloptcomp__reg_with_debug_info.ml: asmcomp/debug/reg_with_debug_info.ml
	(echo "# 1 \"asmcomp/debug/reg_with_debug_info.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__reg_with_debug_info.mli: asmcomp/debug/reg_with_debug_info.mli
	(echo "# 1 \"asmcomp/debug/reg_with_debug_info.mli\""; cat $<) > $@
compilerlibs/unprefixed/reg_with_debug_info.ml: asmcomp/debug/reg_with_debug_info.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Reg_with_debug_info instead.\"]" > $@
	echo "include Ocamloptcomp.Reg_with_debug_info" >> $@
compilerlibs/ocamloptcomp__reg_availability_set.ml: asmcomp/debug/reg_availability_set.ml
	(echo "# 1 \"asmcomp/debug/reg_availability_set.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__reg_availability_set.mli: asmcomp/debug/reg_availability_set.mli
	(echo "# 1 \"asmcomp/debug/reg_availability_set.mli\""; cat $<) > $@
compilerlibs/unprefixed/reg_availability_set.ml: asmcomp/debug/reg_availability_set.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Reg_availability_set instead.\"]" > $@
	echo "include Ocamloptcomp.Reg_availability_set" >> $@
compilerlibs/ocamloptcomp__mach.ml: asmcomp/mach.ml
	(echo "# 1 \"asmcomp/mach.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__mach.mli: asmcomp/mach.mli
	(echo "# 1 \"asmcomp/mach.mli\""; cat $<) > $@
compilerlibs/unprefixed/mach.ml: asmcomp/mach.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Mach instead.\"]" > $@
	echo "include Ocamloptcomp.Mach" >> $@
compilerlibs/ocamloptcomp__proc.ml: asmcomp/proc.ml
	(echo "# 1 \"asmcomp/proc.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__proc.mli: asmcomp/proc.mli
	(echo "# 1 \"asmcomp/proc.mli\""; cat $<) > $@
compilerlibs/unprefixed/proc.ml: asmcomp/proc.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Proc instead.\"]" > $@
	echo "include Ocamloptcomp.Proc" >> $@
compilerlibs/ocamloptcomp__clambda.ml: asmcomp/clambda.ml
	(echo "# 1 \"asmcomp/clambda.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__clambda.mli: asmcomp/clambda.mli
	(echo "# 1 \"asmcomp/clambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/clambda.ml: asmcomp/clambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Clambda instead.\"]" > $@
	echo "include Ocamloptcomp.Clambda" >> $@
compilerlibs/ocamloptcomp__printclambda.ml: asmcomp/printclambda.ml
	(echo "# 1 \"asmcomp/printclambda.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__printclambda.mli: asmcomp/printclambda.mli
	(echo "# 1 \"asmcomp/printclambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/printclambda.ml: asmcomp/printclambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Printclambda instead.\"]" > $@
	echo "include Ocamloptcomp.Printclambda" >> $@
compilerlibs/ocamloptcomp__export_info.ml: asmcomp/export_info.ml
	(echo "# 1 \"asmcomp/export_info.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__export_info.mli: asmcomp/export_info.mli
	(echo "# 1 \"asmcomp/export_info.mli\""; cat $<) > $@
compilerlibs/unprefixed/export_info.ml: asmcomp/export_info.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Export_info instead.\"]" > $@
	echo "include Ocamloptcomp.Export_info" >> $@
compilerlibs/ocamloptcomp__export_info_for_pack.ml: asmcomp/export_info_for_pack.ml
	(echo "# 1 \"asmcomp/export_info_for_pack.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__export_info_for_pack.mli: asmcomp/export_info_for_pack.mli
	(echo "# 1 \"asmcomp/export_info_for_pack.mli\""; cat $<) > $@
compilerlibs/unprefixed/export_info_for_pack.ml: asmcomp/export_info_for_pack.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Export_info_for_pack instead.\"]" > $@
	echo "include Ocamloptcomp.Export_info_for_pack" >> $@
compilerlibs/ocamloptcomp__compilenv.ml: asmcomp/compilenv.ml
	(echo "# 1 \"asmcomp/compilenv.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__compilenv.mli: asmcomp/compilenv.mli
	(echo "# 1 \"asmcomp/compilenv.mli\""; cat $<) > $@
compilerlibs/unprefixed/compilenv.ml: asmcomp/compilenv.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Compilenv instead.\"]" > $@
	echo "include Ocamloptcomp.Compilenv" >> $@
compilerlibs/ocamloptcomp__closure.ml: asmcomp/closure.ml
	(echo "# 1 \"asmcomp/closure.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure.mli: asmcomp/closure.mli
	(echo "# 1 \"asmcomp/closure.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure.ml: asmcomp/closure.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure instead.\"]" > $@
	echo "include Ocamloptcomp.Closure" >> $@
compilerlibs/ocamloptcomp__traverse_for_exported_symbols.ml: asmcomp/traverse_for_exported_symbols.ml
	(echo "# 1 \"asmcomp/traverse_for_exported_symbols.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__traverse_for_exported_symbols.mli: asmcomp/traverse_for_exported_symbols.mli
	(echo "# 1 \"asmcomp/traverse_for_exported_symbols.mli\""; cat $<) > $@
compilerlibs/unprefixed/traverse_for_exported_symbols.ml: asmcomp/traverse_for_exported_symbols.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Traverse_for_exported_symbols instead.\"]" > $@
	echo "include Ocamloptcomp.Traverse_for_exported_symbols" >> $@
compilerlibs/ocamloptcomp__build_export_info.ml: asmcomp/build_export_info.ml
	(echo "# 1 \"asmcomp/build_export_info.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__build_export_info.mli: asmcomp/build_export_info.mli
	(echo "# 1 \"asmcomp/build_export_info.mli\""; cat $<) > $@
compilerlibs/unprefixed/build_export_info.ml: asmcomp/build_export_info.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Build_export_info instead.\"]" > $@
	echo "include Ocamloptcomp.Build_export_info" >> $@
compilerlibs/ocamloptcomp__closure_offsets.ml: asmcomp/closure_offsets.ml
	(echo "# 1 \"asmcomp/closure_offsets.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__closure_offsets.mli: asmcomp/closure_offsets.mli
	(echo "# 1 \"asmcomp/closure_offsets.mli\""; cat $<) > $@
compilerlibs/unprefixed/closure_offsets.ml: asmcomp/closure_offsets.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Closure_offsets instead.\"]" > $@
	echo "include Ocamloptcomp.Closure_offsets" >> $@
compilerlibs/ocamloptcomp__flambda_to_clambda.ml: asmcomp/flambda_to_clambda.ml
	(echo "# 1 \"asmcomp/flambda_to_clambda.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__flambda_to_clambda.mli: asmcomp/flambda_to_clambda.mli
	(echo "# 1 \"asmcomp/flambda_to_clambda.mli\""; cat $<) > $@
compilerlibs/unprefixed/flambda_to_clambda.ml: asmcomp/flambda_to_clambda.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Flambda_to_clambda instead.\"]" > $@
	echo "include Ocamloptcomp.Flambda_to_clambda" >> $@
compilerlibs/ocamloptcomp__import_approx.ml: asmcomp/import_approx.ml
	(echo "# 1 \"asmcomp/import_approx.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__import_approx.mli: asmcomp/import_approx.mli
	(echo "# 1 \"asmcomp/import_approx.mli\""; cat $<) > $@
compilerlibs/unprefixed/import_approx.ml: asmcomp/import_approx.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Import_approx instead.\"]" > $@
	echo "include Ocamloptcomp.Import_approx" >> $@
compilerlibs/ocamloptcomp__un_anf.ml: asmcomp/un_anf.ml
	(echo "# 1 \"asmcomp/un_anf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__un_anf.mli: asmcomp/un_anf.mli
	(echo "# 1 \"asmcomp/un_anf.mli\""; cat $<) > $@
compilerlibs/unprefixed/un_anf.ml: asmcomp/un_anf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Un_anf instead.\"]" > $@
	echo "include Ocamloptcomp.Un_anf" >> $@
compilerlibs/ocamloptcomp__afl_instrument.ml: asmcomp/afl_instrument.ml
	(echo "# 1 \"asmcomp/afl_instrument.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__afl_instrument.mli: asmcomp/afl_instrument.mli
	(echo "# 1 \"asmcomp/afl_instrument.mli\""; cat $<) > $@
compilerlibs/unprefixed/afl_instrument.ml: asmcomp/afl_instrument.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Afl_instrument instead.\"]" > $@
	echo "include Ocamloptcomp.Afl_instrument" >> $@
compilerlibs/ocamloptcomp__strmatch.ml: asmcomp/strmatch.ml
	(echo "# 1 \"asmcomp/strmatch.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__strmatch.mli: asmcomp/strmatch.mli
	(echo "# 1 \"asmcomp/strmatch.mli\""; cat $<) > $@
compilerlibs/unprefixed/strmatch.ml: asmcomp/strmatch.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Strmatch instead.\"]" > $@
	echo "include Ocamloptcomp.Strmatch" >> $@
compilerlibs/ocamloptcomp__cmmgen_state.ml: asmcomp/cmmgen_state.ml
	(echo "# 1 \"asmcomp/cmmgen_state.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__cmmgen_state.mli: asmcomp/cmmgen_state.mli
	(echo "# 1 \"asmcomp/cmmgen_state.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmmgen_state.ml: asmcomp/cmmgen_state.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Cmmgen_state instead.\"]" > $@
	echo "include Ocamloptcomp.Cmmgen_state" >> $@
compilerlibs/ocamloptcomp__cmmgen.ml: asmcomp/cmmgen.ml
	(echo "# 1 \"asmcomp/cmmgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__cmmgen.mli: asmcomp/cmmgen.mli
	(echo "# 1 \"asmcomp/cmmgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/cmmgen.ml: asmcomp/cmmgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Cmmgen instead.\"]" > $@
	echo "include Ocamloptcomp.Cmmgen" >> $@
compilerlibs/ocamloptcomp__interval.ml: asmcomp/interval.ml
	(echo "# 1 \"asmcomp/interval.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__interval.mli: asmcomp/interval.mli
	(echo "# 1 \"asmcomp/interval.mli\""; cat $<) > $@
compilerlibs/unprefixed/interval.ml: asmcomp/interval.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Interval instead.\"]" > $@
	echo "include Ocamloptcomp.Interval" >> $@
compilerlibs/ocamloptcomp__printmach.ml: asmcomp/printmach.ml
	(echo "# 1 \"asmcomp/printmach.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__printmach.mli: asmcomp/printmach.mli
	(echo "# 1 \"asmcomp/printmach.mli\""; cat $<) > $@
compilerlibs/unprefixed/printmach.ml: asmcomp/printmach.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Printmach instead.\"]" > $@
	echo "include Ocamloptcomp.Printmach" >> $@
compilerlibs/ocamloptcomp__selectgen.ml: asmcomp/selectgen.ml
	(echo "# 1 \"asmcomp/selectgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__selectgen.mli: asmcomp/selectgen.mli
	(echo "# 1 \"asmcomp/selectgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/selectgen.ml: asmcomp/selectgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Selectgen instead.\"]" > $@
	echo "include Ocamloptcomp.Selectgen" >> $@
compilerlibs/ocamloptcomp__spacetime_profiling.ml: asmcomp/spacetime_profiling.ml
	(echo "# 1 \"asmcomp/spacetime_profiling.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__spacetime_profiling.mli: asmcomp/spacetime_profiling.mli
	(echo "# 1 \"asmcomp/spacetime_profiling.mli\""; cat $<) > $@
compilerlibs/unprefixed/spacetime_profiling.ml: asmcomp/spacetime_profiling.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Spacetime_profiling instead.\"]" > $@
	echo "include Ocamloptcomp.Spacetime_profiling" >> $@
compilerlibs/ocamloptcomp__selection.ml: asmcomp/selection.ml
	(echo "# 1 \"asmcomp/selection.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__selection.mli: asmcomp/selection.mli
	(echo "# 1 \"asmcomp/selection.mli\""; cat $<) > $@
compilerlibs/unprefixed/selection.ml: asmcomp/selection.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Selection instead.\"]" > $@
	echo "include Ocamloptcomp.Selection" >> $@
compilerlibs/ocamloptcomp__comballoc.ml: asmcomp/comballoc.ml
	(echo "# 1 \"asmcomp/comballoc.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__comballoc.mli: asmcomp/comballoc.mli
	(echo "# 1 \"asmcomp/comballoc.mli\""; cat $<) > $@
compilerlibs/unprefixed/comballoc.ml: asmcomp/comballoc.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Comballoc instead.\"]" > $@
	echo "include Ocamloptcomp.Comballoc" >> $@
compilerlibs/ocamloptcomp__CSEgen.ml: asmcomp/CSEgen.ml
	(echo "# 1 \"asmcomp/CSEgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__CSEgen.mli: asmcomp/CSEgen.mli
	(echo "# 1 \"asmcomp/CSEgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/CSEgen.ml: asmcomp/CSEgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.CSEgen instead.\"]" > $@
	echo "include Ocamloptcomp.CSEgen" >> $@
compilerlibs/ocamloptcomp__CSE.ml: asmcomp/CSE.ml
	(echo "# 1 \"asmcomp/CSE.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__CSE.mli: asmcomp/CSE.mli
	(echo "# 1 \"asmcomp/CSE.mli\""; cat $<) > $@
compilerlibs/unprefixed/CSE.ml: asmcomp/CSE.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.CSE instead.\"]" > $@
	echo "include Ocamloptcomp.CSE" >> $@
compilerlibs/ocamloptcomp__liveness.ml: asmcomp/liveness.ml
	(echo "# 1 \"asmcomp/liveness.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__liveness.mli: asmcomp/liveness.mli
	(echo "# 1 \"asmcomp/liveness.mli\""; cat $<) > $@
compilerlibs/unprefixed/liveness.ml: asmcomp/liveness.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Liveness instead.\"]" > $@
	echo "include Ocamloptcomp.Liveness" >> $@
compilerlibs/ocamloptcomp__spill.ml: asmcomp/spill.ml
	(echo "# 1 \"asmcomp/spill.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__spill.mli: asmcomp/spill.mli
	(echo "# 1 \"asmcomp/spill.mli\""; cat $<) > $@
compilerlibs/unprefixed/spill.ml: asmcomp/spill.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Spill instead.\"]" > $@
	echo "include Ocamloptcomp.Spill" >> $@
compilerlibs/ocamloptcomp__split.ml: asmcomp/split.ml
	(echo "# 1 \"asmcomp/split.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__split.mli: asmcomp/split.mli
	(echo "# 1 \"asmcomp/split.mli\""; cat $<) > $@
compilerlibs/unprefixed/split.ml: asmcomp/split.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Split instead.\"]" > $@
	echo "include Ocamloptcomp.Split" >> $@
compilerlibs/ocamloptcomp__interf.ml: asmcomp/interf.ml
	(echo "# 1 \"asmcomp/interf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__interf.mli: asmcomp/interf.mli
	(echo "# 1 \"asmcomp/interf.mli\""; cat $<) > $@
compilerlibs/unprefixed/interf.ml: asmcomp/interf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Interf instead.\"]" > $@
	echo "include Ocamloptcomp.Interf" >> $@
compilerlibs/ocamloptcomp__coloring.ml: asmcomp/coloring.ml
	(echo "# 1 \"asmcomp/coloring.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__coloring.mli: asmcomp/coloring.mli
	(echo "# 1 \"asmcomp/coloring.mli\""; cat $<) > $@
compilerlibs/unprefixed/coloring.ml: asmcomp/coloring.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Coloring instead.\"]" > $@
	echo "include Ocamloptcomp.Coloring" >> $@
compilerlibs/ocamloptcomp__linscan.ml: asmcomp/linscan.ml
	(echo "# 1 \"asmcomp/linscan.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__linscan.mli: asmcomp/linscan.mli
	(echo "# 1 \"asmcomp/linscan.mli\""; cat $<) > $@
compilerlibs/unprefixed/linscan.ml: asmcomp/linscan.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Linscan instead.\"]" > $@
	echo "include Ocamloptcomp.Linscan" >> $@
compilerlibs/ocamloptcomp__reloadgen.ml: asmcomp/reloadgen.ml
	(echo "# 1 \"asmcomp/reloadgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__reloadgen.mli: asmcomp/reloadgen.mli
	(echo "# 1 \"asmcomp/reloadgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/reloadgen.ml: asmcomp/reloadgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Reloadgen instead.\"]" > $@
	echo "include Ocamloptcomp.Reloadgen" >> $@
compilerlibs/ocamloptcomp__reload.ml: asmcomp/reload.ml
	(echo "# 1 \"asmcomp/reload.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__reload.mli: asmcomp/reload.mli
	(echo "# 1 \"asmcomp/reload.mli\""; cat $<) > $@
compilerlibs/unprefixed/reload.ml: asmcomp/reload.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Reload instead.\"]" > $@
	echo "include Ocamloptcomp.Reload" >> $@
compilerlibs/ocamloptcomp__deadcode.ml: asmcomp/deadcode.ml
	(echo "# 1 \"asmcomp/deadcode.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__deadcode.mli: asmcomp/deadcode.mli
	(echo "# 1 \"asmcomp/deadcode.mli\""; cat $<) > $@
compilerlibs/unprefixed/deadcode.ml: asmcomp/deadcode.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Deadcode instead.\"]" > $@
	echo "include Ocamloptcomp.Deadcode" >> $@
compilerlibs/ocamloptcomp__printlinear.ml: asmcomp/printlinear.ml
	(echo "# 1 \"asmcomp/printlinear.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__printlinear.mli: asmcomp/printlinear.mli
	(echo "# 1 \"asmcomp/printlinear.mli\""; cat $<) > $@
compilerlibs/unprefixed/printlinear.ml: asmcomp/printlinear.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Printlinear instead.\"]" > $@
	echo "include Ocamloptcomp.Printlinear" >> $@
compilerlibs/ocamloptcomp__linearize.ml: asmcomp/linearize.ml
	(echo "# 1 \"asmcomp/linearize.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__linearize.mli: asmcomp/linearize.mli
	(echo "# 1 \"asmcomp/linearize.mli\""; cat $<) > $@
compilerlibs/unprefixed/linearize.ml: asmcomp/linearize.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Linearize instead.\"]" > $@
	echo "include Ocamloptcomp.Linearize" >> $@
compilerlibs/ocamloptcomp__available_regs.ml: asmcomp/debug/available_regs.ml
	(echo "# 1 \"asmcomp/debug/available_regs.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__available_regs.mli: asmcomp/debug/available_regs.mli
	(echo "# 1 \"asmcomp/debug/available_regs.mli\""; cat $<) > $@
compilerlibs/unprefixed/available_regs.ml: asmcomp/debug/available_regs.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Available_regs instead.\"]" > $@
	echo "include Ocamloptcomp.Available_regs" >> $@
compilerlibs/ocamloptcomp__compute_ranges_intf.ml: asmcomp/debug/compute_ranges_intf.ml
	(echo "# 1 \"asmcomp/debug/compute_ranges_intf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__compute_ranges_intf.mli: asmcomp/debug/compute_ranges_intf.mli
	(echo "# 1 \"asmcomp/debug/compute_ranges_intf.mli\""; cat $<) > $@
compilerlibs/unprefixed/compute_ranges_intf.ml: asmcomp/debug/compute_ranges_intf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Compute_ranges_intf instead.\"]" > $@
	echo "include Ocamloptcomp.Compute_ranges_intf" >> $@
compilerlibs/ocamloptcomp__compute_ranges.ml: asmcomp/debug/compute_ranges.ml
	(echo "# 1 \"asmcomp/debug/compute_ranges.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__compute_ranges.mli: asmcomp/debug/compute_ranges.mli
	(echo "# 1 \"asmcomp/debug/compute_ranges.mli\""; cat $<) > $@
compilerlibs/unprefixed/compute_ranges.ml: asmcomp/debug/compute_ranges.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Compute_ranges instead.\"]" > $@
	echo "include Ocamloptcomp.Compute_ranges" >> $@
compilerlibs/ocamloptcomp__schedgen.ml: asmcomp/schedgen.ml
	(echo "# 1 \"asmcomp/schedgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__schedgen.mli: asmcomp/schedgen.mli
	(echo "# 1 \"asmcomp/schedgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/schedgen.ml: asmcomp/schedgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Schedgen instead.\"]" > $@
	echo "include Ocamloptcomp.Schedgen" >> $@
compilerlibs/ocamloptcomp__scheduling.ml: asmcomp/scheduling.ml
	(echo "# 1 \"asmcomp/scheduling.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__scheduling.mli: asmcomp/scheduling.mli
	(echo "# 1 \"asmcomp/scheduling.mli\""; cat $<) > $@
compilerlibs/unprefixed/scheduling.ml: asmcomp/scheduling.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Scheduling instead.\"]" > $@
	echo "include Ocamloptcomp.Scheduling" >> $@
compilerlibs/ocamloptcomp__branch_relaxation_intf.ml: asmcomp/branch_relaxation_intf.ml
	(echo "# 1 \"asmcomp/branch_relaxation_intf.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__branch_relaxation_intf.mli: asmcomp/branch_relaxation_intf.mli
	(echo "# 1 \"asmcomp/branch_relaxation_intf.mli\""; cat $<) > $@
compilerlibs/unprefixed/branch_relaxation_intf.ml: asmcomp/branch_relaxation_intf.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Branch_relaxation_intf instead.\"]" > $@
	echo "include Ocamloptcomp.Branch_relaxation_intf" >> $@
compilerlibs/ocamloptcomp__branch_relaxation.ml: asmcomp/branch_relaxation.ml
	(echo "# 1 \"asmcomp/branch_relaxation.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__branch_relaxation.mli: asmcomp/branch_relaxation.mli
	(echo "# 1 \"asmcomp/branch_relaxation.mli\""; cat $<) > $@
compilerlibs/unprefixed/branch_relaxation.ml: asmcomp/branch_relaxation.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Branch_relaxation instead.\"]" > $@
	echo "include Ocamloptcomp.Branch_relaxation" >> $@
compilerlibs/ocamloptcomp__emitaux.ml: asmcomp/emitaux.ml
	(echo "# 1 \"asmcomp/emitaux.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__emitaux.mli: asmcomp/emitaux.mli
	(echo "# 1 \"asmcomp/emitaux.mli\""; cat $<) > $@
compilerlibs/unprefixed/emitaux.ml: asmcomp/emitaux.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Emitaux instead.\"]" > $@
	echo "include Ocamloptcomp.Emitaux" >> $@
compilerlibs/ocamloptcomp__emit.ml: asmcomp/emit.ml
	(echo "# 1 \"asmcomp/emit.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__emit.mli: asmcomp/emit.mli
	(echo "# 1 \"asmcomp/emit.mli\""; cat $<) > $@
compilerlibs/unprefixed/emit.ml: asmcomp/emit.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Emit instead.\"]" > $@
	echo "include Ocamloptcomp.Emit" >> $@
compilerlibs/ocamloptcomp__asmgen.ml: asmcomp/asmgen.ml
	(echo "# 1 \"asmcomp/asmgen.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__asmgen.mli: asmcomp/asmgen.mli
	(echo "# 1 \"asmcomp/asmgen.mli\""; cat $<) > $@
compilerlibs/unprefixed/asmgen.ml: asmcomp/asmgen.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Asmgen instead.\"]" > $@
	echo "include Ocamloptcomp.Asmgen" >> $@
compilerlibs/ocamloptcomp__asmlink.ml: asmcomp/asmlink.ml
	(echo "# 1 \"asmcomp/asmlink.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__asmlink.mli: asmcomp/asmlink.mli
	(echo "# 1 \"asmcomp/asmlink.mli\""; cat $<) > $@
compilerlibs/unprefixed/asmlink.ml: asmcomp/asmlink.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Asmlink instead.\"]" > $@
	echo "include Ocamloptcomp.Asmlink" >> $@
compilerlibs/ocamloptcomp__asmlibrarian.ml: asmcomp/asmlibrarian.ml
	(echo "# 1 \"asmcomp/asmlibrarian.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__asmlibrarian.mli: asmcomp/asmlibrarian.mli
	(echo "# 1 \"asmcomp/asmlibrarian.mli\""; cat $<) > $@
compilerlibs/unprefixed/asmlibrarian.ml: asmcomp/asmlibrarian.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Asmlibrarian instead.\"]" > $@
	echo "include Ocamloptcomp.Asmlibrarian" >> $@
compilerlibs/ocamloptcomp__asmpackager.ml: asmcomp/asmpackager.ml
	(echo "# 1 \"asmcomp/asmpackager.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__asmpackager.mli: asmcomp/asmpackager.mli
	(echo "# 1 \"asmcomp/asmpackager.mli\""; cat $<) > $@
compilerlibs/unprefixed/asmpackager.ml: asmcomp/asmpackager.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Asmpackager instead.\"]" > $@
	echo "include Ocamloptcomp.Asmpackager" >> $@
compilerlibs/ocamloptcomp__opterrors.ml: driver/opterrors.ml
	(echo "# 1 \"driver/opterrors.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__opterrors.mli: driver/opterrors.mli
	(echo "# 1 \"driver/opterrors.mli\""; cat $<) > $@
compilerlibs/unprefixed/opterrors.ml: driver/opterrors.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Opterrors instead.\"]" > $@
	echo "include Ocamloptcomp.Opterrors" >> $@
compilerlibs/ocamloptcomp__optcompile.ml: driver/optcompile.ml
	(echo "# 1 \"driver/optcompile.ml\""; cat $<) > $@
compilerlibs/ocamloptcomp__optcompile.mli: driver/optcompile.mli
	(echo "# 1 \"driver/optcompile.mli\""; cat $<) > $@
compilerlibs/unprefixed/optcompile.ml: driver/optcompile.ml
	echo "[@@@ocaml.deprecated \"Use Ocamloptcomp.Optcompile instead.\"]" > $@
	echo "include Ocamloptcomp.Optcompile" >> $@
compilerlibs/ocamloptcomp.ml: Makefile
	echo "module CSE                              = Ocamloptcomp__CSE" > $@
	echo "module CSEgen                           = Ocamloptcomp__CSEgen" >> $@
	echo "module Afl_instrument                   = Ocamloptcomp__afl_instrument" >> $@
	echo "module Alias_analysis                   = Ocamloptcomp__alias_analysis" >> $@
	echo "module Allocated_const                  = Ocamloptcomp__allocated_const" >> $@
	echo "module Arch                             = Ocamloptcomp__arch" >> $@
	echo "module Asmgen                           = Ocamloptcomp__asmgen" >> $@
	echo "module Asmlibrarian                     = Ocamloptcomp__asmlibrarian" >> $@
	echo "module Asmlink                          = Ocamloptcomp__asmlink" >> $@
	echo "module Asmpackager                      = Ocamloptcomp__asmpackager" >> $@
	echo "module Augment_specialised_args         = Ocamloptcomp__augment_specialised_args" >> $@
	echo "module Available_regs                   = Ocamloptcomp__available_regs" >> $@
	echo "module Backend_intf                     = Ocamloptcomp__backend_intf" >> $@
	echo "module Backend_var                      = Ocamloptcomp__backend_var" >> $@
	echo "module Branch_relaxation                = Ocamloptcomp__branch_relaxation" >> $@
	echo "module Branch_relaxation_intf           = Ocamloptcomp__branch_relaxation_intf" >> $@
	echo "module Build_export_info                = Ocamloptcomp__build_export_info" >> $@
	echo "module Clambda                          = Ocamloptcomp__clambda" >> $@
	echo "module Clambda_primitives               = Ocamloptcomp__clambda_primitives" >> $@
	echo "module Closure                          = Ocamloptcomp__closure" >> $@
	echo "module Closure_conversion               = Ocamloptcomp__closure_conversion" >> $@
	echo "module Closure_conversion_aux           = Ocamloptcomp__closure_conversion_aux" >> $@
	echo "module Closure_element                  = Ocamloptcomp__closure_element" >> $@
	echo "module Closure_id                       = Ocamloptcomp__closure_id" >> $@
	echo "module Closure_offsets                  = Ocamloptcomp__closure_offsets" >> $@
	echo "module Closure_origin                   = Ocamloptcomp__closure_origin" >> $@
	echo "module Cmm                              = Ocamloptcomp__cmm" >> $@
	echo "module Cmmgen                           = Ocamloptcomp__cmmgen" >> $@
	echo "module Cmmgen_state                     = Ocamloptcomp__cmmgen_state" >> $@
	echo "module Coloring                         = Ocamloptcomp__coloring" >> $@
	echo "module Comballoc                        = Ocamloptcomp__comballoc" >> $@
	echo "module Compilation_unit                 = Ocamloptcomp__compilation_unit" >> $@
	echo "module Compilenv                        = Ocamloptcomp__compilenv" >> $@
	echo "module Compute_ranges                   = Ocamloptcomp__compute_ranges" >> $@
	echo "module Compute_ranges_intf              = Ocamloptcomp__compute_ranges_intf" >> $@
	echo "module Convert_primitives               = Ocamloptcomp__convert_primitives" >> $@
	echo "module Deadcode                         = Ocamloptcomp__deadcode" >> $@
	echo "module Debuginfo                        = Ocamloptcomp__debuginfo" >> $@
	echo "module Effect_analysis                  = Ocamloptcomp__effect_analysis" >> $@
	echo "module Emit                             = Ocamloptcomp__emit" >> $@
	echo "module Emitaux                          = Ocamloptcomp__emitaux" >> $@
	echo "module Export_id                        = Ocamloptcomp__export_id" >> $@
	echo "module Export_info                      = Ocamloptcomp__export_info" >> $@
	echo "module Export_info_for_pack             = Ocamloptcomp__export_info_for_pack" >> $@
	echo "module Extract_projections              = Ocamloptcomp__extract_projections" >> $@
	echo "module Find_recursive_functions         = Ocamloptcomp__find_recursive_functions" >> $@
	echo "module Flambda                          = Ocamloptcomp__flambda" >> $@
	echo "module Flambda_invariants               = Ocamloptcomp__flambda_invariants" >> $@
	echo "module Flambda_iterators                = Ocamloptcomp__flambda_iterators" >> $@
	echo "module Flambda_to_clambda               = Ocamloptcomp__flambda_to_clambda" >> $@
	echo "module Flambda_utils                    = Ocamloptcomp__flambda_utils" >> $@
	echo "module Freshening                       = Ocamloptcomp__freshening" >> $@
	echo "module Id_types                         = Ocamloptcomp__id_types" >> $@
	echo "module Import_approx                    = Ocamloptcomp__import_approx" >> $@
	echo "module Inconstant_idents                = Ocamloptcomp__inconstant_idents" >> $@
	echo "module Initialize_symbol_to_let_symbol  = Ocamloptcomp__initialize_symbol_to_let_symbol" >> $@
	echo "module Inline_and_simplify              = Ocamloptcomp__inline_and_simplify" >> $@
	echo "module Inline_and_simplify_aux          = Ocamloptcomp__inline_and_simplify_aux" >> $@
	echo "module Inlining_cost                    = Ocamloptcomp__inlining_cost" >> $@
	echo "module Inlining_decision                = Ocamloptcomp__inlining_decision" >> $@
	echo "module Inlining_stats                   = Ocamloptcomp__inlining_stats" >> $@
	echo "module Inlining_stats_types             = Ocamloptcomp__inlining_stats_types" >> $@
	echo "module Inlining_transforms              = Ocamloptcomp__inlining_transforms" >> $@
	echo "module Int_replace_polymorphic_compare  = Ocamloptcomp__int_replace_polymorphic_compare" >> $@
	echo "module Interf                           = Ocamloptcomp__interf" >> $@
	echo "module Internal_variable_names          = Ocamloptcomp__internal_variable_names" >> $@
	echo "module Interval                         = Ocamloptcomp__interval" >> $@
	echo "module Invariant_params                 = Ocamloptcomp__invariant_params" >> $@
	echo "module Lift_code                        = Ocamloptcomp__lift_code" >> $@
	echo "module Lift_constants                   = Ocamloptcomp__lift_constants" >> $@
	echo "module Lift_let_to_initialize_symbol    = Ocamloptcomp__lift_let_to_initialize_symbol" >> $@
	echo "module Linearize                        = Ocamloptcomp__linearize" >> $@
	echo "module Linkage_name                     = Ocamloptcomp__linkage_name" >> $@
	echo "module Linscan                          = Ocamloptcomp__linscan" >> $@
	echo "module Liveness                         = Ocamloptcomp__liveness" >> $@
	echo "module Mach                             = Ocamloptcomp__mach" >> $@
	echo "module Middle_end                       = Ocamloptcomp__middle_end" >> $@
	echo "module Mutable_variable                 = Ocamloptcomp__mutable_variable" >> $@
	echo "module Optcompile                       = Ocamloptcomp__optcompile" >> $@
	echo "module Opterrors                        = Ocamloptcomp__opterrors" >> $@
	echo "module Parameter                        = Ocamloptcomp__parameter" >> $@
	echo "module Pass_wrapper                     = Ocamloptcomp__pass_wrapper" >> $@
	echo "module Printclambda                     = Ocamloptcomp__printclambda" >> $@
	echo "module Printclambda_primitives          = Ocamloptcomp__printclambda_primitives" >> $@
	echo "module Printcmm                         = Ocamloptcomp__printcmm" >> $@
	echo "module Printlinear                      = Ocamloptcomp__printlinear" >> $@
	echo "module Printmach                        = Ocamloptcomp__printmach" >> $@
	echo "module Proc                             = Ocamloptcomp__proc" >> $@
	echo "module Projection                       = Ocamloptcomp__projection" >> $@
	echo "module Ref_to_variables                 = Ocamloptcomp__ref_to_variables" >> $@
	echo "module Reg                              = Ocamloptcomp__reg" >> $@
	echo "module Reg_availability_set             = Ocamloptcomp__reg_availability_set" >> $@
	echo "module Reg_with_debug_info              = Ocamloptcomp__reg_with_debug_info" >> $@
	echo "module Reload                           = Ocamloptcomp__reload" >> $@
	echo "module Reloadgen                        = Ocamloptcomp__reloadgen" >> $@
	echo "module Remove_free_vars_equal_to_args   = Ocamloptcomp__remove_free_vars_equal_to_args" >> $@
	echo "module Remove_unused_arguments          = Ocamloptcomp__remove_unused_arguments" >> $@
	echo "module Remove_unused_closure_vars       = Ocamloptcomp__remove_unused_closure_vars" >> $@
	echo "module Remove_unused_program_constructs = Ocamloptcomp__remove_unused_program_constructs" >> $@
	echo "module Schedgen                         = Ocamloptcomp__schedgen" >> $@
	echo "module Scheduling                       = Ocamloptcomp__scheduling" >> $@
	echo "module Selectgen                        = Ocamloptcomp__selectgen" >> $@
	echo "module Selection                        = Ocamloptcomp__selection" >> $@
	echo "module Semantics_of_primitives          = Ocamloptcomp__semantics_of_primitives" >> $@
	echo "module Set_of_closures_id               = Ocamloptcomp__set_of_closures_id" >> $@
	echo "module Set_of_closures_origin           = Ocamloptcomp__set_of_closures_origin" >> $@
	echo "module Share_constants                  = Ocamloptcomp__share_constants" >> $@
	echo "module Simple_value_approx              = Ocamloptcomp__simple_value_approx" >> $@
	echo "module Simplify_boxed_integer_ops       = Ocamloptcomp__simplify_boxed_integer_ops" >> $@
	echo "module Simplify_boxed_integer_ops_intf  = Ocamloptcomp__simplify_boxed_integer_ops_intf" >> $@
	echo "module Simplify_common                  = Ocamloptcomp__simplify_common" >> $@
	echo "module Simplify_primitives              = Ocamloptcomp__simplify_primitives" >> $@
	echo "module Spacetime_profiling              = Ocamloptcomp__spacetime_profiling" >> $@
	echo "module Spill                            = Ocamloptcomp__spill" >> $@
	echo "module Split                            = Ocamloptcomp__split" >> $@
	echo "module Static_exception                 = Ocamloptcomp__static_exception" >> $@
	echo "module Strmatch                         = Ocamloptcomp__strmatch" >> $@
	echo "module Symbol                           = Ocamloptcomp__symbol" >> $@
	echo "module Tag                              = Ocamloptcomp__tag" >> $@
	echo "module Traverse_for_exported_symbols    = Ocamloptcomp__traverse_for_exported_symbols" >> $@
	echo "module Un_anf                           = Ocamloptcomp__un_anf" >> $@
	echo "module Unbox_closures                   = Ocamloptcomp__unbox_closures" >> $@
	echo "module Unbox_free_vars_of_closures      = Ocamloptcomp__unbox_free_vars_of_closures" >> $@
	echo "module Unbox_specialised_args           = Ocamloptcomp__unbox_specialised_args" >> $@
	echo "module Var_within_closure               = Ocamloptcomp__var_within_closure" >> $@
	echo "module Variable                         = Ocamloptcomp__variable" >> $@
	echo "module X86_dsl                          = Ocamloptcomp__x86_dsl" >> $@
	echo "module X86_gas                          = Ocamloptcomp__x86_gas" >> $@
	echo "module X86_masm                         = Ocamloptcomp__x86_masm" >> $@
	echo "module X86_proc                         = Ocamloptcomp__x86_proc" >> $@
beforedepend:: compilerlibs/ocamloptcomp.ml \
	compilerlibs/ocamloptcomp__CSE.ml \
	compilerlibs/ocamloptcomp__CSE.mli \
	compilerlibs/unprefixed/CSE.ml \
	compilerlibs/ocamloptcomp__CSEgen.ml \
	compilerlibs/ocamloptcomp__CSEgen.mli \
	compilerlibs/unprefixed/CSEgen.ml \
	compilerlibs/ocamloptcomp__afl_instrument.ml \
	compilerlibs/ocamloptcomp__afl_instrument.mli \
	compilerlibs/unprefixed/afl_instrument.ml \
	compilerlibs/ocamloptcomp__alias_analysis.ml \
	compilerlibs/ocamloptcomp__alias_analysis.mli \
	compilerlibs/unprefixed/alias_analysis.ml \
	compilerlibs/ocamloptcomp__allocated_const.ml \
	compilerlibs/ocamloptcomp__allocated_const.mli \
	compilerlibs/unprefixed/allocated_const.ml \
	compilerlibs/ocamloptcomp__arch.ml \
	compilerlibs/ocamloptcomp__arch.mli \
	compilerlibs/unprefixed/arch.ml \
	compilerlibs/ocamloptcomp__asmgen.ml \
	compilerlibs/ocamloptcomp__asmgen.mli \
	compilerlibs/unprefixed/asmgen.ml \
	compilerlibs/ocamloptcomp__asmlibrarian.ml \
	compilerlibs/ocamloptcomp__asmlibrarian.mli \
	compilerlibs/unprefixed/asmlibrarian.ml \
	compilerlibs/ocamloptcomp__asmlink.ml \
	compilerlibs/ocamloptcomp__asmlink.mli \
	compilerlibs/unprefixed/asmlink.ml \
	compilerlibs/ocamloptcomp__asmpackager.ml \
	compilerlibs/ocamloptcomp__asmpackager.mli \
	compilerlibs/unprefixed/asmpackager.ml \
	compilerlibs/ocamloptcomp__augment_specialised_args.ml \
	compilerlibs/ocamloptcomp__augment_specialised_args.mli \
	compilerlibs/unprefixed/augment_specialised_args.ml \
	compilerlibs/ocamloptcomp__available_regs.ml \
	compilerlibs/ocamloptcomp__available_regs.mli \
	compilerlibs/unprefixed/available_regs.ml \
	compilerlibs/ocamloptcomp__backend_intf.ml \
	compilerlibs/ocamloptcomp__backend_intf.mli \
	compilerlibs/unprefixed/backend_intf.ml \
	compilerlibs/ocamloptcomp__backend_var.ml \
	compilerlibs/ocamloptcomp__backend_var.mli \
	compilerlibs/unprefixed/backend_var.ml \
	compilerlibs/ocamloptcomp__branch_relaxation.ml \
	compilerlibs/ocamloptcomp__branch_relaxation.mli \
	compilerlibs/unprefixed/branch_relaxation.ml \
	compilerlibs/ocamloptcomp__branch_relaxation_intf.ml \
	compilerlibs/ocamloptcomp__branch_relaxation_intf.mli \
	compilerlibs/unprefixed/branch_relaxation_intf.ml \
	compilerlibs/ocamloptcomp__build_export_info.ml \
	compilerlibs/ocamloptcomp__build_export_info.mli \
	compilerlibs/unprefixed/build_export_info.ml \
	compilerlibs/ocamloptcomp__clambda.ml \
	compilerlibs/ocamloptcomp__clambda.mli \
	compilerlibs/unprefixed/clambda.ml \
	compilerlibs/ocamloptcomp__clambda_primitives.ml \
	compilerlibs/ocamloptcomp__clambda_primitives.mli \
	compilerlibs/unprefixed/clambda_primitives.ml \
	compilerlibs/ocamloptcomp__closure.ml \
	compilerlibs/ocamloptcomp__closure.mli \
	compilerlibs/unprefixed/closure.ml \
	compilerlibs/ocamloptcomp__closure_conversion.ml \
	compilerlibs/ocamloptcomp__closure_conversion.mli \
	compilerlibs/unprefixed/closure_conversion.ml \
	compilerlibs/ocamloptcomp__closure_conversion_aux.ml \
	compilerlibs/ocamloptcomp__closure_conversion_aux.mli \
	compilerlibs/unprefixed/closure_conversion_aux.ml \
	compilerlibs/ocamloptcomp__closure_element.ml \
	compilerlibs/ocamloptcomp__closure_element.mli \
	compilerlibs/unprefixed/closure_element.ml \
	compilerlibs/ocamloptcomp__closure_id.ml \
	compilerlibs/ocamloptcomp__closure_id.mli \
	compilerlibs/unprefixed/closure_id.ml \
	compilerlibs/ocamloptcomp__closure_offsets.ml \
	compilerlibs/ocamloptcomp__closure_offsets.mli \
	compilerlibs/unprefixed/closure_offsets.ml \
	compilerlibs/ocamloptcomp__closure_origin.ml \
	compilerlibs/ocamloptcomp__closure_origin.mli \
	compilerlibs/unprefixed/closure_origin.ml \
	compilerlibs/ocamloptcomp__cmm.ml \
	compilerlibs/ocamloptcomp__cmm.mli \
	compilerlibs/unprefixed/cmm.ml \
	compilerlibs/ocamloptcomp__cmmgen.ml \
	compilerlibs/ocamloptcomp__cmmgen.mli \
	compilerlibs/unprefixed/cmmgen.ml \
	compilerlibs/ocamloptcomp__cmmgen_state.ml \
	compilerlibs/ocamloptcomp__cmmgen_state.mli \
	compilerlibs/unprefixed/cmmgen_state.ml \
	compilerlibs/ocamloptcomp__coloring.ml \
	compilerlibs/ocamloptcomp__coloring.mli \
	compilerlibs/unprefixed/coloring.ml \
	compilerlibs/ocamloptcomp__comballoc.ml \
	compilerlibs/ocamloptcomp__comballoc.mli \
	compilerlibs/unprefixed/comballoc.ml \
	compilerlibs/ocamloptcomp__compilation_unit.ml \
	compilerlibs/ocamloptcomp__compilation_unit.mli \
	compilerlibs/unprefixed/compilation_unit.ml \
	compilerlibs/ocamloptcomp__compilenv.ml \
	compilerlibs/ocamloptcomp__compilenv.mli \
	compilerlibs/unprefixed/compilenv.ml \
	compilerlibs/ocamloptcomp__compute_ranges.ml \
	compilerlibs/ocamloptcomp__compute_ranges.mli \
	compilerlibs/unprefixed/compute_ranges.ml \
	compilerlibs/ocamloptcomp__compute_ranges_intf.ml \
	compilerlibs/ocamloptcomp__compute_ranges_intf.mli \
	compilerlibs/unprefixed/compute_ranges_intf.ml \
	compilerlibs/ocamloptcomp__convert_primitives.ml \
	compilerlibs/ocamloptcomp__convert_primitives.mli \
	compilerlibs/unprefixed/convert_primitives.ml \
	compilerlibs/ocamloptcomp__deadcode.ml \
	compilerlibs/ocamloptcomp__deadcode.mli \
	compilerlibs/unprefixed/deadcode.ml \
	compilerlibs/ocamloptcomp__debuginfo.ml \
	compilerlibs/ocamloptcomp__debuginfo.mli \
	compilerlibs/unprefixed/debuginfo.ml \
	compilerlibs/ocamloptcomp__effect_analysis.ml \
	compilerlibs/ocamloptcomp__effect_analysis.mli \
	compilerlibs/unprefixed/effect_analysis.ml \
	compilerlibs/ocamloptcomp__emit.ml \
	compilerlibs/ocamloptcomp__emit.mli \
	compilerlibs/unprefixed/emit.ml \
	compilerlibs/ocamloptcomp__emitaux.ml \
	compilerlibs/ocamloptcomp__emitaux.mli \
	compilerlibs/unprefixed/emitaux.ml \
	compilerlibs/ocamloptcomp__export_id.ml \
	compilerlibs/ocamloptcomp__export_id.mli \
	compilerlibs/unprefixed/export_id.ml \
	compilerlibs/ocamloptcomp__export_info.ml \
	compilerlibs/ocamloptcomp__export_info.mli \
	compilerlibs/unprefixed/export_info.ml \
	compilerlibs/ocamloptcomp__export_info_for_pack.ml \
	compilerlibs/ocamloptcomp__export_info_for_pack.mli \
	compilerlibs/unprefixed/export_info_for_pack.ml \
	compilerlibs/ocamloptcomp__extract_projections.ml \
	compilerlibs/ocamloptcomp__extract_projections.mli \
	compilerlibs/unprefixed/extract_projections.ml \
	compilerlibs/ocamloptcomp__find_recursive_functions.ml \
	compilerlibs/ocamloptcomp__find_recursive_functions.mli \
	compilerlibs/unprefixed/find_recursive_functions.ml \
	compilerlibs/ocamloptcomp__flambda.ml \
	compilerlibs/ocamloptcomp__flambda.mli \
	compilerlibs/unprefixed/flambda.ml \
	compilerlibs/ocamloptcomp__flambda_invariants.ml \
	compilerlibs/ocamloptcomp__flambda_invariants.mli \
	compilerlibs/unprefixed/flambda_invariants.ml \
	compilerlibs/ocamloptcomp__flambda_iterators.ml \
	compilerlibs/ocamloptcomp__flambda_iterators.mli \
	compilerlibs/unprefixed/flambda_iterators.ml \
	compilerlibs/ocamloptcomp__flambda_to_clambda.ml \
	compilerlibs/ocamloptcomp__flambda_to_clambda.mli \
	compilerlibs/unprefixed/flambda_to_clambda.ml \
	compilerlibs/ocamloptcomp__flambda_utils.ml \
	compilerlibs/ocamloptcomp__flambda_utils.mli \
	compilerlibs/unprefixed/flambda_utils.ml \
	compilerlibs/ocamloptcomp__freshening.ml \
	compilerlibs/ocamloptcomp__freshening.mli \
	compilerlibs/unprefixed/freshening.ml \
	compilerlibs/ocamloptcomp__id_types.ml \
	compilerlibs/ocamloptcomp__id_types.mli \
	compilerlibs/unprefixed/id_types.ml \
	compilerlibs/ocamloptcomp__import_approx.ml \
	compilerlibs/ocamloptcomp__import_approx.mli \
	compilerlibs/unprefixed/import_approx.ml \
	compilerlibs/ocamloptcomp__inconstant_idents.ml \
	compilerlibs/ocamloptcomp__inconstant_idents.mli \
	compilerlibs/unprefixed/inconstant_idents.ml \
	compilerlibs/ocamloptcomp__initialize_symbol_to_let_symbol.ml \
	compilerlibs/ocamloptcomp__initialize_symbol_to_let_symbol.mli \
	compilerlibs/unprefixed/initialize_symbol_to_let_symbol.ml \
	compilerlibs/ocamloptcomp__inline_and_simplify.ml \
	compilerlibs/ocamloptcomp__inline_and_simplify.mli \
	compilerlibs/unprefixed/inline_and_simplify.ml \
	compilerlibs/ocamloptcomp__inline_and_simplify_aux.ml \
	compilerlibs/ocamloptcomp__inline_and_simplify_aux.mli \
	compilerlibs/unprefixed/inline_and_simplify_aux.ml \
	compilerlibs/ocamloptcomp__inlining_cost.ml \
	compilerlibs/ocamloptcomp__inlining_cost.mli \
	compilerlibs/unprefixed/inlining_cost.ml \
	compilerlibs/ocamloptcomp__inlining_decision.ml \
	compilerlibs/ocamloptcomp__inlining_decision.mli \
	compilerlibs/unprefixed/inlining_decision.ml \
	compilerlibs/ocamloptcomp__inlining_stats.ml \
	compilerlibs/ocamloptcomp__inlining_stats.mli \
	compilerlibs/unprefixed/inlining_stats.ml \
	compilerlibs/ocamloptcomp__inlining_stats_types.ml \
	compilerlibs/ocamloptcomp__inlining_stats_types.mli \
	compilerlibs/unprefixed/inlining_stats_types.ml \
	compilerlibs/ocamloptcomp__inlining_transforms.ml \
	compilerlibs/ocamloptcomp__inlining_transforms.mli \
	compilerlibs/unprefixed/inlining_transforms.ml \
	compilerlibs/ocamloptcomp__int_replace_polymorphic_compare.ml \
	compilerlibs/ocamloptcomp__int_replace_polymorphic_compare.mli \
	compilerlibs/unprefixed/int_replace_polymorphic_compare.ml \
	compilerlibs/ocamloptcomp__interf.ml \
	compilerlibs/ocamloptcomp__interf.mli \
	compilerlibs/unprefixed/interf.ml \
	compilerlibs/ocamloptcomp__internal_variable_names.ml \
	compilerlibs/ocamloptcomp__internal_variable_names.mli \
	compilerlibs/unprefixed/internal_variable_names.ml \
	compilerlibs/ocamloptcomp__interval.ml \
	compilerlibs/ocamloptcomp__interval.mli \
	compilerlibs/unprefixed/interval.ml \
	compilerlibs/ocamloptcomp__invariant_params.ml \
	compilerlibs/ocamloptcomp__invariant_params.mli \
	compilerlibs/unprefixed/invariant_params.ml \
	compilerlibs/ocamloptcomp__lift_code.ml \
	compilerlibs/ocamloptcomp__lift_code.mli \
	compilerlibs/unprefixed/lift_code.ml \
	compilerlibs/ocamloptcomp__lift_constants.ml \
	compilerlibs/ocamloptcomp__lift_constants.mli \
	compilerlibs/unprefixed/lift_constants.ml \
	compilerlibs/ocamloptcomp__lift_let_to_initialize_symbol.ml \
	compilerlibs/ocamloptcomp__lift_let_to_initialize_symbol.mli \
	compilerlibs/unprefixed/lift_let_to_initialize_symbol.ml \
	compilerlibs/ocamloptcomp__linearize.ml \
	compilerlibs/ocamloptcomp__linearize.mli \
	compilerlibs/unprefixed/linearize.ml \
	compilerlibs/ocamloptcomp__linkage_name.ml \
	compilerlibs/ocamloptcomp__linkage_name.mli \
	compilerlibs/unprefixed/linkage_name.ml \
	compilerlibs/ocamloptcomp__linscan.ml \
	compilerlibs/ocamloptcomp__linscan.mli \
	compilerlibs/unprefixed/linscan.ml \
	compilerlibs/ocamloptcomp__liveness.ml \
	compilerlibs/ocamloptcomp__liveness.mli \
	compilerlibs/unprefixed/liveness.ml \
	compilerlibs/ocamloptcomp__mach.ml \
	compilerlibs/ocamloptcomp__mach.mli \
	compilerlibs/unprefixed/mach.ml \
	compilerlibs/ocamloptcomp__middle_end.ml \
	compilerlibs/ocamloptcomp__middle_end.mli \
	compilerlibs/unprefixed/middle_end.ml \
	compilerlibs/ocamloptcomp__mutable_variable.ml \
	compilerlibs/ocamloptcomp__mutable_variable.mli \
	compilerlibs/unprefixed/mutable_variable.ml \
	compilerlibs/ocamloptcomp__optcompile.ml \
	compilerlibs/ocamloptcomp__optcompile.mli \
	compilerlibs/unprefixed/optcompile.ml \
	compilerlibs/ocamloptcomp__opterrors.ml \
	compilerlibs/ocamloptcomp__opterrors.mli \
	compilerlibs/unprefixed/opterrors.ml \
	compilerlibs/ocamloptcomp__parameter.ml \
	compilerlibs/ocamloptcomp__parameter.mli \
	compilerlibs/unprefixed/parameter.ml \
	compilerlibs/ocamloptcomp__pass_wrapper.ml \
	compilerlibs/ocamloptcomp__pass_wrapper.mli \
	compilerlibs/unprefixed/pass_wrapper.ml \
	compilerlibs/ocamloptcomp__printclambda.ml \
	compilerlibs/ocamloptcomp__printclambda.mli \
	compilerlibs/unprefixed/printclambda.ml \
	compilerlibs/ocamloptcomp__printclambda_primitives.ml \
	compilerlibs/ocamloptcomp__printclambda_primitives.mli \
	compilerlibs/unprefixed/printclambda_primitives.ml \
	compilerlibs/ocamloptcomp__printcmm.ml \
	compilerlibs/ocamloptcomp__printcmm.mli \
	compilerlibs/unprefixed/printcmm.ml \
	compilerlibs/ocamloptcomp__printlinear.ml \
	compilerlibs/ocamloptcomp__printlinear.mli \
	compilerlibs/unprefixed/printlinear.ml \
	compilerlibs/ocamloptcomp__printmach.ml \
	compilerlibs/ocamloptcomp__printmach.mli \
	compilerlibs/unprefixed/printmach.ml \
	compilerlibs/ocamloptcomp__proc.ml \
	compilerlibs/ocamloptcomp__proc.mli \
	compilerlibs/unprefixed/proc.ml \
	compilerlibs/ocamloptcomp__projection.ml \
	compilerlibs/ocamloptcomp__projection.mli \
	compilerlibs/unprefixed/projection.ml \
	compilerlibs/ocamloptcomp__ref_to_variables.ml \
	compilerlibs/ocamloptcomp__ref_to_variables.mli \
	compilerlibs/unprefixed/ref_to_variables.ml \
	compilerlibs/ocamloptcomp__reg.ml \
	compilerlibs/ocamloptcomp__reg.mli \
	compilerlibs/unprefixed/reg.ml \
	compilerlibs/ocamloptcomp__reg_availability_set.ml \
	compilerlibs/ocamloptcomp__reg_availability_set.mli \
	compilerlibs/unprefixed/reg_availability_set.ml \
	compilerlibs/ocamloptcomp__reg_with_debug_info.ml \
	compilerlibs/ocamloptcomp__reg_with_debug_info.mli \
	compilerlibs/unprefixed/reg_with_debug_info.ml \
	compilerlibs/ocamloptcomp__reload.ml \
	compilerlibs/ocamloptcomp__reload.mli \
	compilerlibs/unprefixed/reload.ml \
	compilerlibs/ocamloptcomp__reloadgen.ml \
	compilerlibs/ocamloptcomp__reloadgen.mli \
	compilerlibs/unprefixed/reloadgen.ml \
	compilerlibs/ocamloptcomp__remove_free_vars_equal_to_args.ml \
	compilerlibs/ocamloptcomp__remove_free_vars_equal_to_args.mli \
	compilerlibs/unprefixed/remove_free_vars_equal_to_args.ml \
	compilerlibs/ocamloptcomp__remove_unused_arguments.ml \
	compilerlibs/ocamloptcomp__remove_unused_arguments.mli \
	compilerlibs/unprefixed/remove_unused_arguments.ml \
	compilerlibs/ocamloptcomp__remove_unused_closure_vars.ml \
	compilerlibs/ocamloptcomp__remove_unused_closure_vars.mli \
	compilerlibs/unprefixed/remove_unused_closure_vars.ml \
	compilerlibs/ocamloptcomp__remove_unused_program_constructs.ml \
	compilerlibs/ocamloptcomp__remove_unused_program_constructs.mli \
	compilerlibs/unprefixed/remove_unused_program_constructs.ml \
	compilerlibs/ocamloptcomp__schedgen.ml \
	compilerlibs/ocamloptcomp__schedgen.mli \
	compilerlibs/unprefixed/schedgen.ml \
	compilerlibs/ocamloptcomp__scheduling.ml \
	compilerlibs/ocamloptcomp__scheduling.mli \
	compilerlibs/unprefixed/scheduling.ml \
	compilerlibs/ocamloptcomp__selectgen.ml \
	compilerlibs/ocamloptcomp__selectgen.mli \
	compilerlibs/unprefixed/selectgen.ml \
	compilerlibs/ocamloptcomp__selection.ml \
	compilerlibs/ocamloptcomp__selection.mli \
	compilerlibs/unprefixed/selection.ml \
	compilerlibs/ocamloptcomp__semantics_of_primitives.ml \
	compilerlibs/ocamloptcomp__semantics_of_primitives.mli \
	compilerlibs/unprefixed/semantics_of_primitives.ml \
	compilerlibs/ocamloptcomp__set_of_closures_id.ml \
	compilerlibs/ocamloptcomp__set_of_closures_id.mli \
	compilerlibs/unprefixed/set_of_closures_id.ml \
	compilerlibs/ocamloptcomp__set_of_closures_origin.ml \
	compilerlibs/ocamloptcomp__set_of_closures_origin.mli \
	compilerlibs/unprefixed/set_of_closures_origin.ml \
	compilerlibs/ocamloptcomp__share_constants.ml \
	compilerlibs/ocamloptcomp__share_constants.mli \
	compilerlibs/unprefixed/share_constants.ml \
	compilerlibs/ocamloptcomp__simple_value_approx.ml \
	compilerlibs/ocamloptcomp__simple_value_approx.mli \
	compilerlibs/unprefixed/simple_value_approx.ml \
	compilerlibs/ocamloptcomp__simplify_boxed_integer_ops.ml \
	compilerlibs/ocamloptcomp__simplify_boxed_integer_ops.mli \
	compilerlibs/unprefixed/simplify_boxed_integer_ops.ml \
	compilerlibs/ocamloptcomp__simplify_boxed_integer_ops_intf.ml \
	compilerlibs/ocamloptcomp__simplify_boxed_integer_ops_intf.mli \
	compilerlibs/unprefixed/simplify_boxed_integer_ops_intf.ml \
	compilerlibs/ocamloptcomp__simplify_common.ml \
	compilerlibs/ocamloptcomp__simplify_common.mli \
	compilerlibs/unprefixed/simplify_common.ml \
	compilerlibs/ocamloptcomp__simplify_primitives.ml \
	compilerlibs/ocamloptcomp__simplify_primitives.mli \
	compilerlibs/unprefixed/simplify_primitives.ml \
	compilerlibs/ocamloptcomp__spacetime_profiling.ml \
	compilerlibs/ocamloptcomp__spacetime_profiling.mli \
	compilerlibs/unprefixed/spacetime_profiling.ml \
	compilerlibs/ocamloptcomp__spill.ml \
	compilerlibs/ocamloptcomp__spill.mli \
	compilerlibs/unprefixed/spill.ml \
	compilerlibs/ocamloptcomp__split.ml \
	compilerlibs/ocamloptcomp__split.mli \
	compilerlibs/unprefixed/split.ml \
	compilerlibs/ocamloptcomp__static_exception.ml \
	compilerlibs/ocamloptcomp__static_exception.mli \
	compilerlibs/unprefixed/static_exception.ml \
	compilerlibs/ocamloptcomp__strmatch.ml \
	compilerlibs/ocamloptcomp__strmatch.mli \
	compilerlibs/unprefixed/strmatch.ml \
	compilerlibs/ocamloptcomp__symbol.ml \
	compilerlibs/ocamloptcomp__symbol.mli \
	compilerlibs/unprefixed/symbol.ml \
	compilerlibs/ocamloptcomp__tag.ml \
	compilerlibs/ocamloptcomp__tag.mli \
	compilerlibs/unprefixed/tag.ml \
	compilerlibs/ocamloptcomp__traverse_for_exported_symbols.ml \
	compilerlibs/ocamloptcomp__traverse_for_exported_symbols.mli \
	compilerlibs/unprefixed/traverse_for_exported_symbols.ml \
	compilerlibs/ocamloptcomp__un_anf.ml \
	compilerlibs/ocamloptcomp__un_anf.mli \
	compilerlibs/unprefixed/un_anf.ml \
	compilerlibs/ocamloptcomp__unbox_closures.ml \
	compilerlibs/ocamloptcomp__unbox_closures.mli \
	compilerlibs/unprefixed/unbox_closures.ml \
	compilerlibs/ocamloptcomp__unbox_free_vars_of_closures.ml \
	compilerlibs/ocamloptcomp__unbox_free_vars_of_closures.mli \
	compilerlibs/unprefixed/unbox_free_vars_of_closures.ml \
	compilerlibs/ocamloptcomp__unbox_specialised_args.ml \
	compilerlibs/ocamloptcomp__unbox_specialised_args.mli \
	compilerlibs/unprefixed/unbox_specialised_args.ml \
	compilerlibs/ocamloptcomp__var_within_closure.ml \
	compilerlibs/ocamloptcomp__var_within_closure.mli \
	compilerlibs/unprefixed/var_within_closure.ml \
	compilerlibs/ocamloptcomp__variable.ml \
	compilerlibs/ocamloptcomp__variable.mli \
	compilerlibs/unprefixed/variable.ml \
	compilerlibs/ocamloptcomp__x86_dsl.ml \
	compilerlibs/ocamloptcomp__x86_dsl.mli \
	compilerlibs/unprefixed/x86_dsl.ml \
	compilerlibs/ocamloptcomp__x86_gas.ml \
	compilerlibs/ocamloptcomp__x86_gas.mli \
	compilerlibs/unprefixed/x86_gas.ml \
	compilerlibs/ocamloptcomp__x86_masm.ml \
	compilerlibs/ocamloptcomp__x86_masm.mli \
	compilerlibs/unprefixed/x86_masm.ml \
	compilerlibs/ocamloptcomp__x86_proc.ml \
	compilerlibs/ocamloptcomp__x86_proc.mli \
	compilerlibs/unprefixed/x86_proc.ml
